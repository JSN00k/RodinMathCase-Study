<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="dba590b584fb49bcf45118ccdb4f9278" org.eventb.theory.core.outdated="true">
<org.eventb.theory.core.useTheory name="Operators" org.eventb.core.scTarget="/Maths/Operators.dtf|org.eventb.theory.core.deployedTheoryRoot#Operators"/>
<org.eventb.theory.core.scTypeParameter name="T" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scTypeParameter name="U" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.typeParameter#1" org.eventb.core.type="ℙ(U)"/>
<org.eventb.theory.core.scNewOperatorDefinition name="V" org.eventb.core.label="Monoid" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T×ℙ(T×T×T))" org.eventb.theory.core.wd="∀ident⦂T,op⦂ℙ(T×T×T)·(ident∈T∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)∧(∀x⦂T·¬x∈T∨(ident ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(ident ↦ x)=x∧x ↦ ident∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ ident)=x)))∨¬ident∈T∨((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧¬op∈AssocOp(T))∨(∃x⦂T·x∈T∧((ident ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(ident ↦ x)=x)∨(x ↦ ident∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ ident)=x)))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{ident⦂T,op⦂ℙ(T×T×T)·ident∈T∧op∈AssocOp(T)∧(∀x⦂T·x∈T⇒op(ident ↦ x)=x∧op(x ↦ ident)=x) ∣ ident ↦ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="W" org.eventb.core.label="mInit" org.eventb.core.predicate="op∈AssocOp(T)∧((∀x⦂T·x∈T⇒x ↦ ident∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ ident)=x⇒ident ↦ x∈dom(op)))∧(∀x⦂T·x∈T⇒op(x ↦ ident)=x∧op(ident ↦ x)=x))" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="T×ℙ(T×T×T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="ident" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="ident ↦ op"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="X" org.eventb.core.label="mIdent" org.eventb.core.predicate="m∈Monoid(T)" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="T" org.eventb.theory.core.wd="m∈dom(prj1 ⦂ ℙ(T×ℙ(T×T×T)×T))∧(prj1 ⦂ ℙ(T×ℙ(T×T×T)×T))∈T × ℙ(T × T × T) ⇸ T">
<org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T×ℙ(T×T×T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="(prj1 ⦂ ℙ(T×ℙ(T×T×T)×T))(m)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Y" org.eventb.core.label="mOp" org.eventb.core.predicate="m∈Monoid(T)" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T×T×T)" org.eventb.theory.core.wd="m∈dom(prj2 ⦂ ℙ(T×ℙ(T×T×T)×ℙ(T×T×T)))∧(prj2 ⦂ ℙ(T×ℙ(T×T×T)×ℙ(T×T×T)))∈T × ℙ(T × T × T) ⇸ ℙ(T × T × T)">
<org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T×ℙ(T×T×T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="(prj2 ⦂ ℙ(T×ℙ(T×T×T)×ℙ(T×T×T)))(m)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Z" org.eventb.core.label="isIsomorphic" org.eventb.core.predicate="m∈Monoid(T)∧n∈Monoid(U)" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂T,y⦂T·∃f⦂ℙ(T×U)·f∈T ⤖ U∧x ↦ y∈dom(mOp(m))∧mOp(m)∈T × T ⇸ T∧mOp(m)(x ↦ y)∈dom(f)∧f∈T ⇸ U∧x∈dom(f)∧f∈T ⇸ U∧y∈dom(f)∧f∈T ⇸ U∧f(x) ↦ f(y)∈dom(mOp(n))∧mOp(n)∈U × U ⇸ U∧f(mOp(m)(x ↦ y))=mOp(n)(f(x) ↦ f(y)))∨(∃x⦂T,y⦂T·∀f⦂ℙ(T×U)·¬f∈T ⤖ U∨(x ↦ y∈dom(mOp(m))∧mOp(m)∈T × T ⇸ T∧mOp(m)(x ↦ y)∈dom(f)∧f∈T ⇸ U∧x∈dom(f)∧f∈T ⇸ U∧y∈dom(f)∧f∈T ⇸ U∧f(x) ↦ f(y)∈dom(mOp(n))∧mOp(n)∈U × U ⇸ U∧¬f(mOp(m)(x ↦ y))=mOp(n)(f(x) ↦ f(y))))">
<org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T×ℙ(T×T×T)"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="U×ℙ(U×U×U)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂T,y⦂T·∃f⦂ℙ(T×U)·f∈T ⤖ U∧f(mOp(m)(x ↦ y))=mOp(n)(f(x) ↦ f(y))"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="simpmIdent" org.eventb.core.predicate="∀ident⦂T,op⦂ℙ(T×T×T)·ident ↦ op∈Monoid(T)⇒mIdent(mInit(ident,op))=ident" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="simpMonOp" org.eventb.core.predicate="∀ident⦂T,op⦂ℙ(T×T×T)·ident ↦ op∈Monoid(T)⇒mOp(mInit(ident,op))=op" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'">
<org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scMetavariable name="ident" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.core.type="T"/>
<org.eventb.theory.core.scMetavariable name="op" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scMetavariable name="m" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="T×ℙ(T×T×T)"/>
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.core.type="U×ℙ(U×U×U)"/>
<org.eventb.theory.core.scRewriteRule name="Monoid.Monoid" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.Monoid" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid expansion" org.eventb.theory.core.formula="Monoid(a)">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid rhs" org.eventb.core.label="Monoid rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.formula="{ident⦂T,op⦂ℙ(T×T×T)·ident∈T∧op∈AssocOp(T)∧(∀x⦂T·x∈T⇒op(ident ↦ x)=x∧op(x ↦ ident)=x) ∣ ident ↦ op}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.mInit" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.mInit" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="mInit expansion" org.eventb.theory.core.formula="mInit(ident,op)">
<org.eventb.theory.core.scRewriteRuleRHS name="mInit rhs" org.eventb.core.label="mInit rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="ident ↦ op"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.mIdent" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.mIdent" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="mIdent expansion" org.eventb.theory.core.formula="mIdent(m)">
<org.eventb.theory.core.scRewriteRuleRHS name="mIdent rhs" org.eventb.core.label="mIdent rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="(prj1 ⦂ ℙ(T×ℙ(T×T×T)×T))(m)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.mOp" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.mOp" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="mOp expansion" org.eventb.theory.core.formula="mOp(m)">
<org.eventb.theory.core.scRewriteRuleRHS name="mOp rhs" org.eventb.core.label="mOp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.formula="(prj2 ⦂ ℙ(T×ℙ(T×T×T)×ℙ(T×T×T)))(m)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid.isIsomorphic" org.eventb.core.accurate="true" org.eventb.core.label="Monoid.isIsomorphic" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isIsomorphic expansion" org.eventb.theory.core.formula="isIsomorphic(m,n)">
<org.eventb.theory.core.scRewriteRuleRHS name="isIsomorphic rhs" org.eventb.core.label="isIsomorphic rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.formula="∀x⦂T,y⦂T·∃f⦂ℙ(T×U)·f∈T ⤖ U∧f(mOp(m)(x ↦ y))=mOp(n)(f(x) ↦ f(y))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocn" org.eventb.core.label="simplify rewrite" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/">
<org.eventb.theory.core.scMetavariable name="ident" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scMetavariable name="op" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.metaVariable#(" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scRewriteRule name="idenu" org.eventb.core.accurate="true" org.eventb.core.label="mIdent(m)=ident" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#)" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="GetIdent" org.eventb.theory.core.formula="mIdent(ident ↦ op)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#)|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="ident"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="idenv" org.eventb.core.accurate="true" org.eventb.core.label="mIdent(m)=ident2" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#*" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="GetIdent" org.eventb.theory.core.formula="mIdent(mInit(ident,op))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#*|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="ident"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="idenw" org.eventb.core.accurate="true" org.eventb.core.label="mOp(m) = op" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#+" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Get Op" org.eventb.theory.core.formula="mOp(ident ↦ op)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#+|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="op"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="idenx" org.eventb.core.accurate="true" org.eventb.core.label="mOp(m) = op2" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#," org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Get Op" org.eventb.theory.core.formula="mOp(mInit(ident,op))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.proofRulesBlock#\/|org.eventb.theory.core.rewriteRule#,|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="op"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
