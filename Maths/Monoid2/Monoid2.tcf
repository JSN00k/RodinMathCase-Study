<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="false" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/Maths/Monoid2.tuf">
<org.eventb.theory.core.scTypeParameter name="T" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scNewOperatorDefinition name="U" org.eventb.core.label="AssociativeOp" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd=" ∀ op⦂ℙ(T×T×T)·(op ∈ T × T → T ∧ ( ∀ x⦂T,y⦂T,z⦂T·x ↦ y ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ op ( x ↦ y )  ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ y ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ x ↦ op ( y ↦ z )  ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) )) ∨  ¬ op ∈ T × T → T ∨ ( ∃ x⦂T,y⦂T,z⦂T·x ↦ y ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ op ( x ↦ y )  ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ y ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ x ↦ op ( y ↦ z )  ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧  ¬ op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) )">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula=" { op⦂ℙ(T×T×T)·op ∈ T × T → T ∧ ( ∀ x⦂T,y⦂T,z⦂T·op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) ) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="V" org.eventb.core.label="Monoid2" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scRewriteRule name="Monoid2.AssociativeOp" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.AssociativeOp" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="AssociativeOp expansion" org.eventb.theory.core.formula=" AssociativeOp  ⦂ ℙ(ℙ(T×T×T))">
<org.eventb.theory.core.scRewriteRuleRHS name="AssociativeOp rhs" org.eventb.core.label="AssociativeOp rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula=" { op⦂ℙ(T×T×T)·op ∈ T × T → T ∧ ( ∀ x⦂T,y⦂T,z⦂T·op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) ) ∣ op}"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.scTheoryRoot>
