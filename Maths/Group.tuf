<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Maths">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Maths/MonoidPOW.dtf|org.eventb.theory.core.deployedTheoryRoot#MonoidPOW"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="Group" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ m ∣ m ∈ Monoid(t) ∧ ∀x·∃xInv·mOp(m)(x ↦ xInv) = mIdent(m) ∧ mOp(m)(xInv ↦ x) = mIdent(m) }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="/" org.eventb.core.label="gIdent" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Group(T)" org.eventb.core.identifier="g"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="prj1(g)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.theorem name="*" org.eventb.core.label="gInvUniqueThm" org.eventb.core.predicate="∀g, x, y, z·g ∈ Group(T) ∧ mOp(g)(x ↦ y) = mIdent(g) ∧ mOp(g)(x ↦ z) = mIdent(g) ⇒ y = z"/>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="gReverseInverse" org.eventb.core.predicate="∀g, x, y· g ∈ Group(T) ⇒ (mOp(g)(x ↦ y) = mIdent(g) ⇒ mOp(g)(x ↦ y) = mOp(g)(y ↦ x))"/>
<org.eventb.theory.core.proofRulesBlock name="-" org.eventb.core.label="inverseRules">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="T"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="invX" org.eventb.theory.core.type="T"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="inverseCommutes" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="x commutes with it's inverse" org.eventb.theory.core.formula="gOp(g)(x ↦ invX)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="g ∈ Group(T) ∧ gOp(g)(x ↦ invX) = gIdent(g)" org.eventb.theory.core.formula="gOp(g)(invX ↦ x)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.metaVariable name="+" org.eventb.core.identifier="g" org.eventb.theory.core.type="T×ℙ(T×T×T)"/>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.newOperatorDefinition name="." org.eventb.core.label="gOp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Group(T)" org.eventb.core.identifier="g"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="prj2(g)"/>
</org.eventb.theory.core.newOperatorDefinition>
</org.eventb.theory.core.theoryRoot>
