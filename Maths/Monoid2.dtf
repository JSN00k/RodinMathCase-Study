<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="3a9f69f46e04ffa8116691dba9e373da" org.eventb.theory.core.outdated="true">
<org.eventb.theory.core.scTypeParameter name="T" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scNewOperatorDefinition name="U" org.eventb.core.label="AssociativeOp" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd=" ∀ op⦂ℙ(T×T×T)·(op ∈ T × T → T ∧ ( ∀ x⦂T,y⦂T,z⦂T·x ↦ y ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ op ( x ↦ y )  ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ y ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ x ↦ op ( y ↦ z )  ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) )) ∨  ¬ op ∈ T × T → T ∨ ( ∃ x⦂T,y⦂T,z⦂T·x ↦ y ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ op ( x ↦ y )  ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ y ↦ z ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧ x ↦ op ( y ↦ z )  ∈  dom (op) ∧ op ∈ T × T ⇸ T ∧  ¬ op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) )">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula=" { op⦂ℙ(T×T×T)·op ∈ T × T → T ∧ ( ∀ x⦂T,y⦂T,z⦂T·op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) ) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="V" org.eventb.core.label="AssociativeOpPolly" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd=" ⊤ ">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula=" { op⦂ℙ(T×T×T)·op ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T))) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="W" org.eventb.core.label="opInit" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd=" ∀ associativeOp⦂ℙ(T×T×T)·(associativeOp ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T))) ∧ associativeOp = op) ∨  ¬ associativeOp ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T))) ∨  ¬ associativeOp = op">
<org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula=" { associativeOp⦂ℙ(T×T×T)·associativeOp ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T))) ∧ associativeOp = op ∣ associativeOp}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="X" org.eventb.core.label="Monoid" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T×ℙ(T×T×T))" org.eventb.theory.core.wd=" ∀ ident⦂T,operator⦂ℙ(T×T×T)·(ident ∈ T ∧ operator ∈  AssociativeOpPolly (ident)) ∨  ¬ ident ∈ T ∨  ¬ operator ∈  AssociativeOpPolly (ident)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula=" { ident⦂T,operator⦂ℙ(T×T×T)·ident ∈ T ∧ operator ∈  AssociativeOpPolly (ident) ∣ ident ↦ operator}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Y" org.eventb.core.label="MonoidPolly" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T×ℙ(T×T×T))" org.eventb.theory.core.wd=" ⊤ ">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula=" { monoid⦂T×ℙ(T×T×T)·monoid ∈ ( Monoid  ⦂ ℙ(T×ℙ(T×T×T))) ∣ monoid}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="Z" org.eventb.core.label="monInit1" org.eventb.core.predicate="op ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T)))" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T×ℙ(T×T×T))" org.eventb.theory.core.wd=" ∀ monoid⦂T×ℙ(T×T×T)·(monoid ∈  MonoidPolly (ident) ∧ monoid = ident ↦ op) ∨  ¬ monoid ∈  MonoidPolly (ident) ∨  ¬ monoid = ident ↦ op">
<org.eventb.theory.core.scOperatorArgument name="ident" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula=" { monoid⦂T×ℙ(T×T×T)·monoid ∈  MonoidPolly (ident) ∧ monoid = ident ↦ op ∣ monoid}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="[" org.eventb.core.label="monInit2" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(T×ℙ(T×T×T))" org.eventb.theory.core.wd=" ⊤ ">
<org.eventb.theory.core.scOperatorArgument name="ident" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="T"/>
<org.eventb.theory.core.scOperatorArgument name="oper" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula=" monInit1 (ident,oper)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.core.type="T"/>
<org.eventb.theory.core.scMetavariable name="op" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#," org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scMetavariable name="ident" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.core.type="T"/>
<org.eventb.theory.core.scMetavariable name="oper" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.scRewriteRule name="Monoid2.AssociativeOp" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.AssociativeOp" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="AssociativeOp expansion" org.eventb.theory.core.formula=" AssociativeOp  ⦂ ℙ(ℙ(T×T×T))">
<org.eventb.theory.core.scRewriteRuleRHS name="AssociativeOp rhs" org.eventb.core.label="AssociativeOp rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula=" { op⦂ℙ(T×T×T)·op ∈ T × T → T ∧ ( ∀ x⦂T,y⦂T,z⦂T·op ( op ( x ↦ y )  ↦ z )  = op ( x ↦ op ( y ↦ z )  ) ) ∣ op}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid2.AssociativeOpPolly" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.AssociativeOpPolly" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="AssociativeOpPolly expansion" org.eventb.theory.core.formula=" AssociativeOpPolly (a)">
<org.eventb.theory.core.scRewriteRuleRHS name="AssociativeOpPolly rhs" org.eventb.core.label="AssociativeOpPolly rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.formula=" { op⦂ℙ(T×T×T)·op ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T))) ∣ op}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid2.opInit" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.opInit" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="opInit expansion" org.eventb.theory.core.formula=" opInit (op)">
<org.eventb.theory.core.scRewriteRuleRHS name="opInit rhs" org.eventb.core.label="opInit rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.formula=" { associativeOp⦂ℙ(T×T×T)·associativeOp ∈ ( AssociativeOp  ⦂ ℙ(ℙ(T×T×T))) ∧ associativeOp = op ∣ associativeOp}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid2.Monoid" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.Monoid" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Monoid expansion" org.eventb.theory.core.formula=" Monoid  ⦂ ℙ(T×ℙ(T×T×T))">
<org.eventb.theory.core.scRewriteRuleRHS name="Monoid rhs" org.eventb.core.label="Monoid rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula=" { ident⦂T,operator⦂ℙ(T×T×T)·ident ∈ T ∧ operator ∈  AssociativeOpPolly (ident) ∣ ident ↦ operator}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid2.MonoidPolly" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.MonoidPolly" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="MonoidPolly expansion" org.eventb.theory.core.formula=" MonoidPolly (a)">
<org.eventb.theory.core.scRewriteRuleRHS name="MonoidPolly rhs" org.eventb.core.label="MonoidPolly rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.formula=" { monoid⦂T×ℙ(T×T×T)·monoid ∈ ( Monoid  ⦂ ℙ(T×ℙ(T×T×T))) ∣ monoid}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid2.monInit1" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.monInit1" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="monInit1 expansion" org.eventb.theory.core.formula=" monInit1 (ident,op)">
<org.eventb.theory.core.scRewriteRuleRHS name="monInit1 rhs" org.eventb.core.label="monInit1 rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula=" { monoid⦂T×ℙ(T×T×T)·monoid ∈  MonoidPolly (ident) ∧ monoid = ident ↦ op ∣ monoid}"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="Monoid2.monInit2" org.eventb.core.accurate="true" org.eventb.core.label="Monoid2.monInit2" org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="monInit2 expansion" org.eventb.theory.core.formula=" monInit2 (ident,oper)">
<org.eventb.theory.core.scRewriteRuleRHS name="monInit2 rhs" org.eventb.core.label="monInit2 rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/Maths/Monoid2.tuf|org.eventb.theory.core.theoryRoot#Monoid2|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.formula=" monInit1 (ident,oper)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
