<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
<org.eventb.core.prProof name="AssocOp/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y,z" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees y,z)" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,z)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(y ↦ z)" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p14">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p14"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p16">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,z)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(x ↦ y)" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p18">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p18"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="op(y ↦ z)∈T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="op(x ↦ y) ↦ z∈T × T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="op(x ↦ y) ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂ℙ(T)·a∈ℙ(T)⇒(⊤⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="⊤⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op)))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈T × T → T⇒(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="y ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="op(x ↦ y)∈T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀y⦂T,z⦂T·y ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="y ↦ z∈T × T">
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="x ↦ op(y ↦ z)∈T × T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="x ↦ op(y ↦ z)∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂ℙ(T)·a∈ℙ(T)⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op)))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc/WD-C/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,c,x,y,z,op0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,c,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op0)" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op0)" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ / ∨ distribution in goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p13">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p16">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃y,z·¬y ↦ z∈dom(op0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18">
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p18"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst a,b,c)" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p20"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op0(b ↦ c)" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p27">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p27"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p29">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op0(a ↦ b)" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p32">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="," org.eventb.core.prGoal="p34">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in op0∈T × T → T" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p35"/>
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in a ↦ op(b ↦ c)∈dom(op)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x·a ↦ op(b ↦ c) ↦ x∈op)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p25,p18,p35,p37,p3,p4">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p38">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p39">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p42">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x,y,z·¬x ↦ op0(y ↦ z)∈dom(op0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst a,b,c)" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p20"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op0(b ↦ c)" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p27">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p27"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p29">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op0(a ↦ b)" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p32">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="," org.eventb.core.prGoal="p34">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in a ↦ op(b ↦ c)∈dom(op)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x·a ↦ op(b ↦ c) ↦ x∈op)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44">
<org.eventb.core.prIdent name="x0" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44"/>
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in hyp (dom(op0))" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(x∈T∧op0(y ↦ z)∈T)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p49"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p50">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p53">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x,y,z·¬op0(x ↦ y) ↦ z∈dom(op0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst a,b,c)" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p20"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op0(b ↦ c)" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p27">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p27"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p29">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op0(a ↦ b)" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p32">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="," org.eventb.core.prGoal="p34">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in hyp (dom(op0))" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(op0(x ↦ y)∈T∧z∈T)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p49"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="," org.eventb.core.prGoal="p58">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p61">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x,y,z·¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p71">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p71" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p73">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p73" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p74" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p78">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in op0∈T × T → T" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p35"/>
<org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p25">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p79">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p79" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
<org.eventb.core.prRule name="r18" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="p61"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="a ↦ op(b ↦ c) ↦ x0∈op">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x0" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈T × T∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="b ↦ c∈dom(op)">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬y ↦ z∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="op0(a ↦ b) ↦ c∈dom(op0)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈T × T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬x ↦ op0(y ↦ z)∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="op0∈T × T → T⇒(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="a ↦ b∈dom(op0)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬op0(x ↦ y) ↦ z∈T × T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∃x⦂T·a ↦ op(b ↦ c) ↦ x∈op">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬(x∈T∧op0(y ↦ z)∈T)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬⊤∨¬⊤"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="b ↦ c∈dom(op0)∧op0∈T × T ⇸ T∧a ↦ op0(b ↦ c)∈dom(op0)∧a ↦ b∈dom(op0)∧op0(a ↦ b) ↦ c∈dom(op0)∧¬op0(a ↦ op0(b ↦ c))=op0(op0(a ↦ b) ↦ c)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="(∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ y) ↦ z∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧op∈T × T ⇸ T⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∃y⦂T,z⦂T·¬y ↦ z∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧⊤∧⊤∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="(∃y⦂T,z⦂T·¬y ↦ z∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="dom(op0)=T × T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="a ↦ op(b ↦ c) ↦ x∈op">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬op0(x ↦ y)∈T∨¬z∈T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x∈T∧op0(y ↦ z)∈T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·⊤∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧⊤∧⊤∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="op0∈T × T ⇸ T∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·⊤∧⊤∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·¬x ↦ op0(y ↦ z)∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬(∀y⦂T,z⦂T·y ↦ z∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬x∈T∨¬op0(y ↦ z)∈T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="op0(a ↦ b) ↦ c∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="op0∈T × T → T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬op0(x ↦ y) ↦ z∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧op0(x ↦ y)∈T∧z∈T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧⊤∧⊤∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="op0(b ↦ c)∈T">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="(op0∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∧op0∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)))∨¬op0∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T⇒y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧(x ↦ op0(y ↦ z)∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)⇒x ↦ y∈dom(op0)∧op0∈T × T ⇸ T∧(op0(x ↦ y) ↦ z∈dom(op0)∧op0∈T × T ⇸ T⇒y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0))))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x∈T∧y∈T∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y∈T∧z∈T∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="op0(a ↦ b)∈T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="(∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬(op0(x ↦ y)∈T∧z∈T)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬op0(a ↦ op0(b ↦ c))=op0(op0(a ↦ b) ↦ c)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="b ↦ c∈T × T">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="a ↦ op0(b ↦ c)∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧op0(x ↦ y) ↦ z∈T × T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="(∃x⦂T,y⦂T,z⦂T·¬x ↦ op0(y ↦ z)∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="b ↦ c∈dom(op0)">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="a ↦ b∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="(op0∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∧op0∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ y∈T × T∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="op0∈T × T ⇸ T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ y) ↦ z∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬x ↦ op0(y ↦ z)∈T × T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op0∈T × T → T∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="a ↦ op0(b ↦ c)∈dom(op0)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e1" org.eventb.core.expression="a">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e2" org.eventb.core.expression="b">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e3" org.eventb.core.expression="c">
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.disjToImplRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.andOrDistRewrites"/>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.exI"/>
<org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.exF"/>
<org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r18" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL2"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc/WD-S/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,c" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,c,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p12">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p16">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p12">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(a ↦ b)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p17">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(a ↦ b)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p17">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="op(a ↦ b)∈T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="b ↦ c∈dom(op)">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="a ↦ b∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="op(a ↦ b) ↦ c∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)⇒a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·(b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧op∈T × T ⇸ T)∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))))∧op∈AssocOp(T)⇒a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧op∈T × T ⇸ T"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)⇒a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc/S/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,c" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,c,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9,p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p13">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p13"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3,p4,p6,p7,p8,p9,p10,p14,p15">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)∧a ↦ b∈dom(op)∧op(a ↦ b) ↦ c∈dom(op)⇒op(a ↦ op(b ↦ c))=op(op(a ↦ b) ↦ c)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op(a ↦ op(b ↦ c))=op(op(a ↦ b) ↦ c)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)∧a ↦ b∈dom(op)∧op(a ↦ b) ↦ c∈dom(op)⇒op(a ↦ op(b ↦ c))=op(op(a ↦ b) ↦ c)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="b ↦ c∈dom(op)">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·(b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧op∈T × T ⇸ T)∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))))∧op∈AssocOp(T)∧(a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧op∈T × T ⇸ T)⇒op(a ↦ op(b ↦ c))=op(op(a ↦ b) ↦ c)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="thm1/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,op)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p4">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6,p7">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p8">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths2"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators2"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators2.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="x ↦ y∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀x⦂T,y⦂T,op⦂ℙ(T×T×T)·op∈AssocOp(T)⇒x ↦ y∈dom(op)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀x⦂T,y⦂T,op⦂ℙ(T×T×T)·⊤∧⊤∧op∈AssocOp(T)⇒x ↦ y∈dom(op)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="op∈AssocOp(T)⇒x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀x⦂T,y⦂T,op⦂ℙ(T×T×T)·x∈T∧y∈T∧op∈AssocOp(T)⇒x ↦ y∈dom(op)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssocOp_T/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y,z" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees y,z)" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p3"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,z)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(y ↦ z)" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p12">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,z)" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(x ↦ y)" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p16">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p16"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="op(y ↦ z)∈T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="op(x ↦ y) ↦ z∈T × T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="op(x ↦ y) ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊤⇒(⊤⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="op∈T × T → T⇒(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="y ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="op(x ↦ y)∈T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀y⦂T,z⦂T·y ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="y ↦ z∈T × T">
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="x ↦ op(y ↦ z)∈T × T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="x ↦ op(y ↦ z)∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="thm2/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p1">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp_T expansion on goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="p1">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths2"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators2"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators2.AssocOp_T"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths2"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators2"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators2.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}={op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="AssocOp(T)=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc2/WD-C/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,c,x,y,z,op0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,c,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op0)" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op0)" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ / ∨ distribution in goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p3,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p16">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p19">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x,y,z·¬x ↦ op0(y ↦ z)∈dom(op0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst a,b,c)" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p23"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in hyp (dom(op0))" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(x∈T∧op0(y ↦ z)∈T)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p49"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.2.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.3.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.2.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p50">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p53">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x,y,z·¬op0(x ↦ y) ↦ z∈dom(op0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst a,b,c)" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p23"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in hyp (dom(op0))" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(op0(x ↦ y)∈T∧z∈T)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p49"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="," org.eventb.core.prGoal="p73">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p73" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p74" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p76">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃x,y,z·¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p77"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in op0∈T × T → T" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p78"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p78"/>
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p43">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p79">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p79" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76">
<org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p76"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.1.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="3.0.1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈T × T∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="¬(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x∈T∧y∈T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧⊤∧⊤∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈T × T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬x ↦ op0(y ↦ z)∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="op0∈T × T ⇸ T∧¬op0(a ↦ op0(b ↦ c))=op0(op0(a ↦ b) ↦ c)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="op0∈T × T → T⇒(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧⊤∧⊤∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬op0(x ↦ y) ↦ z∈T × T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬(x∈T∧op0(y ↦ z)∈T)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬⊤∨¬⊤"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="(∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ y) ↦ z∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="dom(op0)=T × T∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧⊤∧⊤∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="dom(op0)=T × T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="¬op0(x ↦ y)∈T∨¬z∈T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x∈T∧op0(y ↦ z)∈T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·⊤∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧⊤∧⊤∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="op0∈T × T ⇸ T∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·⊤∧⊤∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·¬x ↦ op0(y ↦ z)∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈T × T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈T × T∧op0∈T × T ⇸ T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬x∈T∨¬op0(y ↦ z)∈T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="op0∈T × T → T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬op0(x ↦ y) ↦ z∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈T × T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧op0(x ↦ y)∈T∧z∈T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧⊤∧⊤∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="(op0∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∧op0∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)))∨¬op0∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T⇒y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧(x ↦ op0(y ↦ z)∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)⇒x ↦ y∈dom(op0)∧op0∈T × T ⇸ T∧(op0(x ↦ y) ↦ z∈dom(op0)∧op0∈T × T ⇸ T⇒y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0))))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x∈T∧y∈T∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y∈T∧z∈T∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·⊤∧⊤∧op0∈T × T ⇸ T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧op∈T × T ⇸ T⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y∈T∧z∈T∧op0∈T × T ⇸ T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="(∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x∈T∧op0(y ↦ z)∈T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="((op0∈T × T ⇸ T∧dom(op0)=T × T)∧(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∧op0∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="¬(op0(x ↦ y)∈T∧z∈T)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬op0(a ↦ op0(b ↦ c))=op0(op0(a ↦ b) ↦ c)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧⊤∧⊤∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧op0(x ↦ y) ↦ z∈T × T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="(∃x⦂T,y⦂T,z⦂T·¬x ↦ op0(y ↦ z)∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="(op0∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∧op0∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈T × T∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·op0∈T × T ⇸ T∧x ↦ y∈T × T∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ y∈dom(op0)∧op0(x ↦ y)∈T∧z∈T∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="op0∈T × T ⇸ T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∃x⦂T,y⦂T,z⦂T·¬op0(x ↦ y) ↦ z∈dom(op0)">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬x ↦ op0(y ↦ z)∈T × T">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))⇒¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="(op0∈T × T ⇸ T∧dom(op0)=T × T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ y) ↦ z∈dom(op0))∧(∀x⦂T,y⦂T,z⦂T·op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z)))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="(∀x⦂T,y⦂T,z⦂T·x ↦ op0(y ↦ z)∈dom(op0))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op0)∧op0∈T × T ⇸ T∧x ↦ op0(y ↦ z)∈dom(op0)∧x ↦ y∈dom(op0)∧op0(x ↦ y) ↦ z∈dom(op0)∧¬op0(x ↦ op0(y ↦ z))=op0(op0(x ↦ y) ↦ z))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e1" org.eventb.core.expression="a">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e2" org.eventb.core.expression="b">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e3" org.eventb.core.expression="c">
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.disjToImplRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.andOrDistRewrites"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.exI"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.exF"/>
<org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL2"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc2/WD-S/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,c" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,c,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p12">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p7"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p16">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p12">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(b ↦ c)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p7">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p17">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for op(b ↦ c)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p17">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="b ↦ c∈T × T">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="b ↦ c∈dom(op)">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·(a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧op∈T × T ⇸ T)∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))))∧op∈AssocOp(T)⇒b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧op∈T × T ⇸ T"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="a ↦ op(b ↦ c)∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)⇒b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)⇒b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="op(b ↦ c)∈T">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc2/S/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,c" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,c,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9,p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p13">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p13"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3,p4,p6,p7,p8,p9,p10,p14,p15">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op(op(a ↦ b) ↦ c)=op(a ↦ op(b ↦ c))">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)∧b ↦ c∈dom(op)∧a ↦ op(b ↦ c)∈dom(op)⇒op(op(a ↦ b) ↦ c)=op(a ↦ op(b ↦ c))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="b ↦ c∈dom(op)">
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op(a ↦ b) ↦ c∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∧op∈AssocOp(T)∧b ↦ c∈dom(op)∧a ↦ op(b ↦ c)∈dom(op)⇒op(op(a ↦ b) ↦ c)=op(a ↦ op(b ↦ c))">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,c⦂T,op⦂ℙ(T×T×T)·(a ↦ b∈dom(op)∧op∈T × T ⇸ T∧op(a ↦ b) ↦ c∈dom(op)∧op∈T × T ⇸ T)∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))))∧op∈AssocOp(T)∧(b ↦ c∈dom(op)∧op∈T × T ⇸ T∧a ↦ op(b ↦ c)∈dom(op)∧op∈T × T ⇸ T)⇒op(op(a ↦ b) ↦ c)=op(a ↦ op(b ↦ c))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="a ↦ op(b ↦ c)∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="c" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CommOp/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y)" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="⊤⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op)))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀x⦂T,y⦂T·y ↦ x∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="y ↦ x∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂ℙ(T)·a∈ℙ(T)⇒(⊤⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op))))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀x⦂T,y⦂T·x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="x ↦ y∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="y ↦ x∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂ℙ(T)·a∈ℙ(T)⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op)))"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssocOpTypeRewrite/WD-S/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssocOpTypeRewrite/S/rhs1" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p2,p3">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p5">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp_T expansion on goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p5">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp_T"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}={op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))⇒AssocOp(T)=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="AssocOp(T)=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))))∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T))))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))))⇒AssocOp(T)=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧(x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T⇒y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op))))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀y⦂T,z⦂T·y ↦ z∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T,z⦂T·x ↦ op(y ↦ z)∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ y) ↦ z∈dom(op))∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧x ↦ y∈dom(op)∧op(x ↦ y) ↦ z∈dom(op)∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CommOp_T/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y)" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p3"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊤⇒(⊤⇒(∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op))))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀x⦂T,y⦂T·y ↦ x∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="y ↦ x∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀x⦂T,y⦂T·x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="x ↦ y∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="op∈T × T → T⇒(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="y ↦ x∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc Domain/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,op)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p4">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6,p7">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p8">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="op∈AssocOp(T)⇒x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="x ↦ y∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀x⦂T,y⦂T,op⦂ℙ(T×T×T)·op∈AssocOp(T)⇒x ↦ y∈dom(op)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀x⦂T,y⦂T,op⦂ℙ(T×T×T)·x∈T∧y∈T∧op∈AssocOp(T)⇒x ↦ y∈dom(op)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀x⦂T,y⦂T,op⦂ℙ(T×T×T)·⊤∧⊤∧op∈AssocOp(T)⇒x ↦ y∈dom(op)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Assoc Type Rewrite/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p1">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp_T expansion on goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="p1">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp_T"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}={op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="AssocOp(T)=(AssocOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Comm Type Rewrite/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CommOp expansion on goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p1">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CommOp_T expansion on goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="p1">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.CommOp_T"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.CommOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}={op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="CommOp(T)=(CommOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}=(CommOp_T ⦂ ℙ(ℙ(T×T×T)))"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Commutative/WD-C/Comm" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b,op0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p3,p4">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op0)" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="(op0∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op0))∧op0∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op0))∧(∀x⦂T,y⦂T·op0(x ↦ y)=op0(y ↦ x)))∨¬op0∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op0)∧op0∈T × T ⇸ T∧y ↦ x∈dom(op0)∧¬op0(x ↦ y)=op0(y ↦ x))">
<org.eventb.core.prIdent name="op0" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x)))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T⇒(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Commutative/WD-S/Comm" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p3,p4,p5,p6">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CommOp expansion on op∈CommOp(T)" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10,p9">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.CommOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="b ↦ a∈T × T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,op⦂ℙ(T×T×T)·(a ↦ b∈dom(op)∧op∈T × T ⇸ T)∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))))∧op∈CommOp(T)⇒b ↦ a∈dom(op)∧op∈T × T ⇸ T"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))∧op∈CommOp(T)⇒b ↦ a∈dom(op)∧op∈T × T ⇸ T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="b ↦ a∈dom(op)∧op∈T × T ⇸ T">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))∧op∈CommOp(T)⇒b ↦ a∈dom(op)∧op∈T × T ⇸ T"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="op∈CommOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="b ↦ a∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Commutative/S/Comm" org.eventb.core.confidence="1000" org.eventb.core.prFresh="a,op,b" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b,op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5,p6,p7">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CommOp expansion on op∈CommOp(T)" org.eventb.core.prHyps="p7">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10,p9">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5,p6,p11,p12">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.CommOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="a ↦ b∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀a⦂T,b⦂T,op⦂ℙ(T×T×T)·(a ↦ b∈dom(op)∧op∈T × T ⇸ T)∧((∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))))∧op∈CommOp(T)∧(b ↦ a∈dom(op)∧op∈T × T ⇸ T)⇒op(a ↦ b)=op(b ↦ a)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀a⦂T,b⦂T,op⦂ℙ(T×T×T)·a ↦ b∈dom(op)∧op∈T × T ⇸ T∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))∧op∈CommOp(T)∧b ↦ a∈dom(op)⇒op(a ↦ b)=op(b ↦ a)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="op(a ↦ b)=op(b ↦ a)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a ↦ b∈dom(op)∧op∈T × T ⇸ T∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))∧op∈CommOp(T)∧b ↦ a∈dom(op)⇒op(a ↦ b)=op(b ↦ a)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="op∈CommOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="b ↦ a∈dom(op)">
<org.eventb.core.prIdent name="a" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Commutative/C" org.eventb.core.confidence="0" org.eventb.core.prFresh="op" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths2/Operators2.tuf|org.eventb.theory.core.theoryRoot#Operators2|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))⇒op∈CommOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op∈CommOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T))∧(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x)))⇒op∈CommOp(T)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x)))⇒op∈CommOp(T)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op))∧op∈T × T ⇸ T∧(∀x⦂T,y⦂T·y ↦ x∈dom(op))∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧¬op(x ↦ y)=op(y ↦ x))"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Broken Test/S-THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="op,x,y,z" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op,x,y,z)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="p2">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p4"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="op(x ↦ y)=op(y ↦ x)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="op(x ↦ y)=z⇒op(x ↦ y)=op(y ↦ x)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="op(x ↦ y)=z">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="op∈AssocOp(T)⇒(op(x ↦ y)=z⇒op(x ↦ y)=op(y ↦ x))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀op⦂ℙ(T×T×T),x⦂T,y⦂T,z⦂T·op∈AssocOp(T)⇒(op(x ↦ y)=z⇒op(x ↦ y)=op(y ↦ x))"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="Broken Test/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="op,x,y,z" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="T" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L">
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp" org.eventb.core.label="AssocOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AssocOp_T" org.eventb.core.label="AssocOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T,z⦂T·y ↦ z∈dom(op)∧op∈T × T ⇸ T∧x ↦ op(y ↦ z)∈dom(op)∧op∈T × T ⇸ T∧x ↦ y∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y) ↦ z∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp" org.eventb.core.label="CommOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="CommOp_T" org.eventb.core.label="CommOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈T × T → T∧(∀x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧op(x ↦ y)=op(y ↦ x)))∨¬op∈T × T → T∨(∃x⦂T,y⦂T·x ↦ y∈dom(op)∧op∈T × T ⇸ T∧y ↦ x∈dom(op)∧op∈T × T ⇸ T∧¬op(x ↦ y)=op(y ↦ x))">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T·op(x ↦ y)=op(y ↦ x)) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp" org.eventb.core.label="AbelianOp" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈AssocOp(T)∧op∈CommOp(T))∨¬op∈AssocOp(T)∨¬op∈CommOp(T)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈AssocOp(T)∧op∈CommOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="AbelianOp_T" org.eventb.core.label="AbelianOp_T" org.eventb.core.predicate="⊤" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(T×T×T))" org.eventb.theory.core.wd="∀op⦂ℙ(T×T×T)·(op∈CommOp(T)∧op∈AssocOp(T))∨¬op∈CommOp(T)∨¬op∈AssocOp(T)">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Maths/Operators.tuf|org.eventb.theory.core.theoryRoot#Operators|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="{op⦂ℙ(T×T×T)·op∈CommOp(T)∧op∈AssocOp(T) ∣ op}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
</org.eventb.core.lang>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees op,x,y,z)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="p2">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p6">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p2"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p7">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p6">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p2"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p7"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AssocOp expansion on op∈AssocOp(T)" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p6">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p2"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p7">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Maths"/>
<org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Operators"/>
<org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Operators.AssocOp"/>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y)=z⇒y ↦ x∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="op∈T × T → T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="op(x ↦ y)=z">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="y ↦ x∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="x ↦ y∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="op∈AssocOp(T)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y)=z⇒y ↦ x∈dom(op))">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="x ↦ y∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="op∈{op⦂ℙ(T×T×T)·op∈T × T → T∧(∀x⦂T,y⦂T,z⦂T·op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)) ∣ op}">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="op∈AssocOp(T)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀op⦂ℙ(T×T×T),x⦂T,y⦂T,z⦂T·op∈AssocOp(T)⇒x ↦ y∈dom(op)∧op∈T × T ⇸ T∧(op(x ↦ y)=z⇒y ↦ x∈dom(op))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="op(x ↦ y)=z⇒y ↦ x∈dom(op)">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="z" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="op∈T × T ⇸ T">
<org.eventb.core.prIdent name="op" org.eventb.core.type="ℙ(T×T×T)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="y ↦ x∈T × T">
<org.eventb.core.prIdent name="x" org.eventb.core.type="T"/>
<org.eventb.core.prIdent name="y" org.eventb.core.type="T"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="T × T"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
</org.eventb.core.prFile>
