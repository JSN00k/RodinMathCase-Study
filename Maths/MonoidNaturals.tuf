<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Maths">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Maths/Monoid.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid"/>
<org.eventb.theory.core.importTheory name="(" org.eventb.theory.core.importTheory="/Maths/Naturals.dtf|org.eventb.theory.core.deployedTheoryRoot#Naturals"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.comment="returns a*a*...*a applied to itselt n times." org.eventb.core.label="mPow" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="+" org.eventb.core.expression="T" org.eventb.core.identifier="a"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Nat" org.eventb.core.identifier="n"/>
<org.eventb.theory.core.recursiveOperatorDefinition name=")" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="zero" org.eventb.theory.core.formula="monIdent(m)"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="suc(xs)" org.eventb.theory.core.formula="monOp(m)(a ↦ mPow(a, xs, m))"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
<org.eventb.theory.core.operatorArgument name="," org.eventb.core.expression="MonoidPoly(a)" org.eventb.core.identifier="m"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="mPow2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="T" org.eventb.core.identifier="a"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Nat" org.eventb.core.identifier="n"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="T" org.eventb.core.identifier="ident"/>
<org.eventb.theory.core.operatorArgument name="*" org.eventb.core.expression="AssociativeOpPoly(ident)" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.directOperatorDefinition name="+" org.eventb.theory.core.formula="mPow(a, n, monInit(ident, op))"/>
<org.eventb.theory.core.operatorWDcondition name="," org.eventb.core.comment="To use this we need to be able to demonstrate that our ident and operator really do form a monoid." org.eventb.core.predicate="ident ↦ op ∈ MonoidPoly(ident)"/>
</org.eventb.theory.core.newOperatorDefinition>
</org.eventb.theory.core.theoryRoot>
