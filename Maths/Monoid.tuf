<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.newOperatorDefinition name="'" org.eventb.core.label="Monoid" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="a"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ ident ↦ op ∣ ident ∈ T ∧ op ∈ AssocOp(T) ∧ ∀x·x ∈ T ⇒ op(ident ↦ x) = x ∧ op(x ↦ ident) = x }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.importTheoryProject name="(" org.eventb.theory.core.importTheoryProject="/Maths">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Maths/Operators.dtf|org.eventb.theory.core.deployedTheoryRoot#Operators"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="mInit" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="T" org.eventb.core.identifier="ident"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="AssocOp(T)" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="ident ↦ op"/>
<org.eventb.theory.core.operatorWDcondition name="*" org.eventb.core.predicate="∀x·x∈T ⇒ op(x ↦ ident) = x ∧ op (ident ↦ x) = x"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.label="mIdent" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Monoid(T)" org.eventb.core.identifier="m"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="prj1(m)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="mOp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Monoid(T)" org.eventb.core.identifier="m"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="prj2(m)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="simpmIdent" org.eventb.core.predicate="∀ident,op·ident ↦ op ∈ Monoid(T)⇒ mIdent(mInit(ident, op)) = ident"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="simpMonOp" org.eventb.core.predicate="∀ident,op·ident ↦ op ∈ Monoid(T)⇒ mOp(mInit(ident, op)) = op"/>
<org.eventb.theory.core.proofRulesBlock name="/" org.eventb.core.label="simplify rewrite">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="ident" org.eventb.theory.core.type="T"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="op" org.eventb.theory.core.type="ℙ(T×T×T)"/>
<org.eventb.theory.core.rewriteRule name=")" org.eventb.core.label="mIdent(m)=ident" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="GetIdent" org.eventb.theory.core.formula="mIdent(ident ↦ op)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="ident"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="mIdent(m)=ident2" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="GetIdent" org.eventb.theory.core.formula="mIdent(mInit(ident, op))">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="ident"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="mOp(m) = op" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Get Op" org.eventb.theory.core.formula="mOp(ident ↦ op)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="op"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="mOp(m) = op2" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Get Op" org.eventb.theory.core.formula="mOp(mInit(ident, op))">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="op"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.typeParameter name="1" org.eventb.core.identifier="U"/>
</org.eventb.theory.core.theoryRoot>
