<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="AssociativeOp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.core.comment="Completeness, Associativity" org.eventb.theory.core.formula="{op ∣ op ∈ (T × T) → T ∧ (∀a,b·(a ∈ T ∧ b ∈ T ⇒ a ↦ b ∈ dom (op))) ∧ ∀x,y,z · op(x ↦ op(y ↦ z)) = op(op(x ↦ y) ↦ z)}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="." org.eventb.core.comment="This is a hack as I can't find a way of passing a type directly" org.eventb.core.label="AssociativeOpPoly" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="T" org.eventb.core.identifier="a"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ op ∣ op ∈ AssociativeOp ⦂ ℙ(ℙ((T × T) × T)) }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="opInit" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ((T × T) × T)" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ associativeOp ∣ associativeOp ∈ AssociativeOp ⦂ ℙ(ℙ((T×T)×T)) ∧ associativeOp = op }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="Monoid" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="{ident ↦ op ∣ ident ∈ T ∧ op ∈ AssociativeOpPoly(ident) ∧ ∀x·x ↦ ident ↦ x ∈ op ∧ ident ↦ x ↦ x ∈ op ∧ op(x ↦ ident) = x ∧ op(ident ↦ x) = x }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="/" org.eventb.core.comment="A hack as I can't define types properly." org.eventb.core.label="MonoidPoly" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="T" org.eventb.core.identifier="a"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ monoid ∣ monoid ∈ Monoid ⦂ ℙ(T × ℙ((T × T) × T)) }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.newOperatorDefinition name="-" org.eventb.core.label="monInit" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="T" org.eventb.core.identifier="ident"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.comment="AssociativeOpPolly(ident)" org.eventb.core.expression="AssociativeOpPoly(ident)" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="ident ↦ op"/>
<org.eventb.theory.core.operatorWDcondition name="*" org.eventb.core.predicate="∀x·x∈T ⇒ op(x ↦ ident) = x ∧ op (ident ↦ x) = x"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="1" org.eventb.core.label="monIdent" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Monoid ⦂ ℙ(T × ℙ((T × T) × T))" org.eventb.core.identifier="m"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="prj1(m)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="2" org.eventb.core.label="monOp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Monoid ⦂ ℙ(T × ℙ((T × T) × T))" org.eventb.core.identifier="m"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="prj2(m)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="3" org.eventb.core.label="opsPoly" org.eventb.core.predicate="∀x,y·x∈T∧y∈T⇒AssociativeOpPoly(x) = AssociativeOpPoly(y)"/>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="monPoly" org.eventb.core.predicate="∀x,y·x∈T∧y∈T⇒MonoidPoly(x) = MonoidPoly(y)"/>
<org.eventb.theory.core.theorem name="5" org.eventb.core.label="simpMonIdent" org.eventb.core.predicate="∀ident,op·ident∈T ∧ op∈AssociativeOpPoly(ident) ∧ ident ↦ op ∈ MonoidPoly(ident)⇒ monIdent(monInit(ident, op)) = ident"/>
<org.eventb.theory.core.theorem name="7" org.eventb.core.label="simpMonOp" org.eventb.core.predicate="∀ident,op·ident∈T ∧ op∈AssociativeOpPoly(ident) ∧ ident ↦ op ∈ MonoidPoly(ident)⇒ monOp(monInit(ident, op)) = op"/>
</org.eventb.theory.core.theoryRoot>
