<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf">
<org.eventb.theory.core.scImportTheoryProject name="'" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.importTheoryProject#'" org.eventb.theory.core.importTheoryProject="/EuclideanTheory">
<org.eventb.theory.core.scImportTheory name="'" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.importTheoryProject#'|org.eventb.theory.core.importTheory#'" org.eventb.theory.core.importTheory="/EuclideanTheory/_VectorSpaceTheorems.dtf|org.eventb.theory.core.deployedTheoryRoot#_VectorSpaceTheorems"/>
</org.eventb.theory.core.scImportTheoryProject>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="dot_product" org.eventb.core.predicate="n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℝ" org.eventb.theory.core.wd="( ∀ i⦂ℤ·i ∈ 1 ‥ n ⇒ i ∈  dom (x) ∧ x ∈  ℤ  ⇸ ( ℝ  ⦂ ℙ(ℝ)) ∧ i ∈  dom (y) ∧ y ∈  ℤ  ⇸ ( ℝ  ⦂ ℙ(ℝ))) ∧ ( λ i⦂ℤ·i ∈ 1 ‥ n ∣ x ( i )  ⊛ y ( i ) ) ∈  ℤ  ⇸ ( ℝ  ⦂ ℙ(ℝ)) ∧  finite ( λ i⦂ℤ·i ∈ 1 ‥ n ∣ x ( i )  ⊛ y ( i ) ) ∧ ( ∀ i⦂ℤ·i ∈ 1 ‥ n ⇒ i ∈  dom (x) ∧ x ∈  ℤ  ⇸ ( ℝ  ⦂ ℙ(ℝ)) ∧ i ∈  dom (y) ∧ y ∈  ℤ  ⇸ ( ℝ  ⦂ ℙ(ℝ)))">
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula=" sum ( λ i⦂ℤ·i ∈ 1 ‥ n ∣ x ( i )  ⊛ y ( i ) )"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scRewriteRule name="_InnerProductSpace.dot_product" org.eventb.core.accurate="true" org.eventb.core.label="_InnerProductSpace.dot_product" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="dot_product expansion" org.eventb.theory.core.formula=" dot_product (n,x,y)">
<org.eventb.theory.core.scRewriteRuleRHS name="dot_product rhs" org.eventb.core.label="dot_product rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula=" sum ( λ i⦂ℤ·i ∈ 1 ‥ n ∣ x ( i )  ⊛ y ( i ) )"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="symmetry_axm" org.eventb.core.predicate=" ∀ n⦂ℤ,y⦂ℙ(ℤ×ℝ),x⦂ℙ(ℤ×ℝ)·n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n) ⇒  dot_product (n,x,y) =  dot_product (n,y,x)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.theorem#*" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="linearity_axm1" org.eventb.core.predicate=" ∀ n⦂ℤ,x⦂ℙ(ℤ×ℝ),y⦂ℙ(ℤ×ℝ),r⦂ℝ·n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n) ∧ r ∈ ( ℝ  ⦂ ℙ(ℝ)) ⇒  dot_product (n, vec_scale (n,x,r),y) = r ⊛  dot_product (n,x,y)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.theorem#)" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="linearity_axm2" org.eventb.core.predicate=" ∀ n⦂ℤ,x⦂ℙ(ℤ×ℝ),y⦂ℙ(ℤ×ℝ),z⦂ℙ(ℤ×ℝ)·n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n) ∧ z ∈  euclidean_space (n) ⇒  dot_product (n, vec_plus (n,x,y),z) =  dot_product (n,x,z) ⊕  dot_product (n,y,z)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="positive_definiteness_axm1" org.eventb.core.predicate=" ∀ n⦂ℤ,x⦂ℙ(ℤ×ℝ)·n ∈  ℕ  ∧ x ∈  euclidean_space (n) ⇒ ( zero  ⦂ ℝ) ⪁  dot_product (n,x,x)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="positive_definiteness_axm2" org.eventb.core.predicate=" ∀ n⦂ℤ,x⦂ℙ(ℤ×ℝ)·n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧  dot_product (n,x,x) = ( zero  ⦂ ℝ) ⇒ x =  vec_zero (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="vec_zero_thm" org.eventb.core.predicate=" ∀ n⦂ℤ,x⦂ℙ(ℤ×ℝ)·n ∈  ℕ  ∧ x ∈  euclidean_space (n) ⇒  dot_product (n, vec_zero (n),x) = ( zero  ⦂ ℝ)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocr" org.eventb.core.label="dot_product rules" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.">
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scMetavariable name="r" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.metaVariable#\/" org.eventb.core.type="ℝ"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.metaVariable#(" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.metaVariable#." org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scMetavariable name="z" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.metaVariable#0" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scRewriteRule name="{" org.eventb.core.accurate="true" org.eventb.core.label="symmetry_rew" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Inner Product Space: dot_product(n, x, y) ==&gt;&gt; dot_product(n, y, x)" org.eventb.theory.core.formula=" dot_product (n,x,y)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#+|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula=" dot_product (n,y,x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="|" org.eventb.core.accurate="true" org.eventb.core.label="linearity_axm1_rew" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Inner Product Space: dot_product(n, vec_scale(n, x, r), y) ==&gt;&gt; r ⊛ dot_product(n, x, y)" org.eventb.theory.core.formula=" dot_product (n, vec_scale (n,x,r),y)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#,|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="r ⊛  dot_product (n,x,y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="}" org.eventb.core.accurate="true" org.eventb.core.label="linearity_axm2_rew" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Inner Product Space: dot_product(n, vec_plus(n, x, y), z) ==&gt;&gt; dot_product(n, x, z) ⊕ dot_product(n, y, z)" org.eventb.theory.core.formula=" dot_product (n, vec_plus (n,x,y),z)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="n ∈  ℕ  ∧ x ∈  euclidean_space (n) ∧ y ∈  euclidean_space (n) ∧ z ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#-|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula=" dot_product (n,x,z) ⊕  dot_product (n,y,z)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="~" org.eventb.core.accurate="true" org.eventb.core.label="vec_zero_rew1" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Inner Product Space: dot_product(n, vec_zero(n), x) ==&gt;&gt; zero" org.eventb.theory.core.formula=" dot_product (n, vec_zero (n),x)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="n ∈  ℕ  ∧ x ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#1|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula=" zero  ⦂ ℝ"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="''" org.eventb.core.accurate="true" org.eventb.core.label="vec_zero_rew2" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Inner Product Space: dot_product(n, x, vec_zero(n)) ==&gt;&gt; zero" org.eventb.theory.core.formula=" dot_product (n,x, vec_zero (n))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="n ∈  ℕ  ∧ x ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.rewriteRule#2|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula=" zero  ⦂ ℝ"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scInferenceRule name="'(" org.eventb.core.accurate="true" org.eventb.core.label="positive_definiteness_axm1_inf" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="Inner Product Space: zero ⪁ dot_product(n, x, x)" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scGiven name="(" org.eventb.core.predicate="n ∈  ℕ " org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.given#(" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scInfer name=")" org.eventb.core.predicate="( zero  ⦂ ℝ) ⪁  dot_product (n,x,x)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.infer#)"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="')" org.eventb.core.accurate="true" org.eventb.core.label="positive_definiteness_axm2_inf" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="Inner Product Space: dot_product(n, x, x) = zero ⇒ x = vec_zero(n)" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate=" dot_product (n,x,x) = ( zero  ⦂ ℝ)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scGiven name="(" org.eventb.core.predicate="x ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#(" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scGiven name=")" org.eventb.core.predicate="n ∈  ℕ " org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#)" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scInfer name="*" org.eventb.core.predicate="x =  vec_zero (n)" org.eventb.core.source="/EuclideanTheory/_InnerProductSpace.tuf|org.eventb.theory.core.theoryRoot#_InnerProductSpace|org.eventb.theory.core.proofRulesBlock#.|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.infer#*"/>
</org.eventb.theory.core.scInferenceRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.scTheoryRoot>
