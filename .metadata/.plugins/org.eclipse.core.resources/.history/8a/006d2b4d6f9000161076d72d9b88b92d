<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf">
<org.eventb.theory.core.scImportTheoryProject name="'" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.importTheoryProject#'" org.eventb.theory.core.importTheoryProject="/RealTheory">
<org.eventb.theory.core.scImportTheory name="'" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.importTheoryProject#'|org.eventb.theory.core.importTheory#'" org.eventb.theory.core.importTheory="/RealTheory/Real.dtf|org.eventb.theory.core.deployedTheoryRoot#Real"/>
</org.eventb.theory.core.scImportTheoryProject>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="euclidean_space" org.eventb.core.predicate="n ∈  ℕ " org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×ℝ))" org.eventb.theory.core.wd=" ⊤ ">
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula=" { x⦂ℙ(ℤ×ℝ)·x ∈ 1 ‥ n → ( ℝ  ⦂ ℙ(ℝ)) ∣ x}"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scRewriteRule name="_VectorSpaceWD.euclidean_space" org.eventb.core.accurate="true" org.eventb.core.label="_VectorSpaceWD.euclidean_space" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="euclidean_space expansion" org.eventb.theory.core.formula=" euclidean_space (n)">
<org.eventb.theory.core.scRewriteRuleRHS name="euclidean_space rhs" org.eventb.core.label="euclidean_space rhs" org.eventb.core.predicate=" ⊤ " org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula=" { x⦂ℙ(ℤ×ℝ)·x ∈ 1 ‥ n → ( ℝ  ⦂ ℙ(ℝ)) ∣ x}"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocl" org.eventb.core.label="WD" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)">
<org.eventb.theory.core.scMetavariable name="i" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.metaVariable#)" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="ℤ"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.metaVariable#(" org.eventb.core.type="ℙ(ℤ×ℝ)"/>
<org.eventb.theory.core.scInferenceRule name="y" org.eventb.core.accurate="true" org.eventb.core.label="vec_domain_inf" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#*" org.eventb.theory.core.applicability="both" org.eventb.theory.core.desc="Vector Space WD: i ∈ 1‥n ∧ x ∈ euclidean_space(n) ⇒ i ∈ dom(x)" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="n ∈  ℕ " org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scGiven name="*" org.eventb.core.predicate="i ∈ 1 ‥ n" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#*" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.scGiven name=")" org.eventb.core.predicate="x ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#)" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="i ∈  dom (x)" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.infer#("/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="z" org.eventb.core.accurate="true" org.eventb.core.label="vec_func_inf" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#+" org.eventb.theory.core.applicability="both" org.eventb.theory.core.desc="Vector Space WD: x ∈ euclidean_space(n) ⇒ x ∈ ℤ ⇸ ℝ" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="n ∈  ℕ " org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.scGiven name="(" org.eventb.core.predicate="x ∈  euclidean_space (n)" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.given#(" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.scInfer name=")" org.eventb.core.predicate="x ∈  ℤ  ⇸ ( ℝ  ⦂ ℙ(ℝ))" org.eventb.core.source="/EuclideanTheory/_VectorSpaceWD.tuf|org.eventb.theory.core.theoryRoot#_VectorSpaceWD|org.eventb.theory.core.proofRulesBlock#)|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.infer#)"/>
</org.eventb.theory.core.scInferenceRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.scTheoryRoot>
