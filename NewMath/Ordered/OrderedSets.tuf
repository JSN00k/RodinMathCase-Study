<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/Relations">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Relations/Ordering.dtf|org.eventb.theory.core.deployedTheoryRoot#Ordering"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="leqInfim" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.directOperatorDefinition name="*" org.eventb.theory.core.formula="{ LeqOp ↦ infim ∣ infim ∈ t ∧ LeqOp ∈ leq(t) ∧ ∀x·x ∈ t ⇒ LeqOp(infim ↦ x) = TRUE }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="Decrementer" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ LeqOp ↦ infim ↦ decr ∣ decr ∈ t→t ∧ LeqOp ↦ infim ∈ leqInfim(t) ∧ ∀x·x ∈ t ∧ x ≠ infim ⇒ LeqOp(decr(x) ↦ x) = TRUE ∧ decr(x) ≠ x}"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="/" org.eventb.core.label="DALeq" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Decrementer(t)" org.eventb.core.identifier="set"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj1(prj1(set))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="0" org.eventb.core.label="DAInfim" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Decrementer(t)" org.eventb.core.identifier="set"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="prj2(prj1(set))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="1" org.eventb.core.label="DADecr" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="prj2(set)"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="Decrementer(t)" org.eventb.core.identifier="set"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="." org.eventb.core.label="DecrAttached" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ LeqOp ↦ infim ↦ decr ∣ LeqOp ↦ infim ↦ decr ∈ Decrementer(t) ∧ ∃x · x ∈ t ∧ decr(x) = infim }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.label="decrN" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.operatorArgument name="," org.eventb.core.expression="Decrementer(t)" org.eventb.core.identifier="set"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="t" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="*" org.eventb.core.expression="pNat" org.eventb.core.identifier="n"/>
<org.eventb.theory.core.recursiveOperatorDefinition name="+" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="zero" org.eventb.theory.core.formula="x"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.theory.core.formula="decrN(t, set, DADecr(t, set)(x), ns)"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="3" org.eventb.core.label="StrongDecr" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
<org.eventb.theory.core.directOperatorDefinition name="(" org.eventb.theory.core.formula="{ LeqOp ↦ infim ↦ decr ∣ LeqOp ↦ infim ↦ decr ∈ Decrementer(t) ∧ ∀x, y · x∈ t ∧ y ∈ t ⇒ (∃n·LeqOp(decrN(t, LeqOp ↦ infim ↦ decr, x, n) ↦ y) = TRUE) }"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="6" org.eventb.core.label="EvenStrongerDecr" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="{ LeqOp ↦ infim ↦ decr ∣ LeqOp ↦ infim ↦ decr ∈ StrongDecr(t) ∧ ∀x, y · x∈ t ∧ y ∈ t ∧ LeqOp(y ↦ x) = TRUE  ∧ decr(x) = infim ⇒ decr(y) = infim }"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="ℙ(T)" org.eventb.core.identifier="t"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.importTheoryProject name="-" org.eventb.theory.core.importTheoryProject="/PeanoNaturals">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/PeanoNaturals/pNat.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="DecrN in t Cororally" org.eventb.core.predicate="∀n · (∀t, set, x·t ∈ ℙ(T) ∧ x ∈ t ∧ set ∈ Decrementer(t) ⇒ decrN(t, set, x, n) ∈ t)"/>
<org.eventb.theory.core.theorem name="5" org.eventb.core.label="DecrN in t" org.eventb.core.predicate="∀t, set, x, n·t ∈ ℙ(T) ∧ x ∈ t ∧ set ∈ Decrementer(t) ⇒ decrN(t, set, x, n) ∈ t"/>
<org.eventb.theory.core.theorem name="2" org.eventb.core.label="DecrToZero" org.eventb.core.predicate="∀ t, Leq, infim, decr · t ∈ ℙ(T) ∧ Leq ↦ infim ↦ decr ∈ StrongDecr(t) ⇒ (∀x·x ∈ t ⇒ ∃n·decrN(t, Leq ↦ infim ↦ decr, x, n) = infim)"/>
<org.eventb.theory.core.theorem name="7" org.eventb.core.label="Unique Infinum" org.eventb.core.predicate="∀t, set· t ∈ ℙ(T) ∧ set ∈ Decrementer(t) ⇒ (∀x·x ∈ t ∧ (∀y·y ∈ t ⇒ DALeq(t, set)(x ↦ y) = TRUE) ⇔ x = DAInfim(t, set))"/>
<org.eventb.theory.core.proofRulesBlock name="8" org.eventb.core.label="rulesBlock1">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.inferenceRule name=")" org.eventb.core.label="inf1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="totallity">
<org.eventb.theory.core.given name="'" org.eventb.core.predicate="¬ x pLeq y" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.infer name="(" org.eventb.core.predicate="y pLeq x"/>
</org.eventb.theory.core.inferenceRule>
<org.eventb.theory.core.inferenceRule name="*" org.eventb.core.label="inf2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="totallity">
<org.eventb.theory.core.given name="'" org.eventb.core.predicate="¬ x pLeq y" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.infer name="(" org.eventb.core.predicate="y pLeq x"/>
</org.eventb.theory.core.inferenceRule>
</org.eventb.theory.core.proofRulesBlock>
</org.eventb.theory.core.theoryRoot>
