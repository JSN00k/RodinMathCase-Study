<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.theorem name="5" org.eventb.core.label="Commutativity" org.eventb.core.predicate="∀x, y·bnIsNormal(x) ∧ bnIsNormal(y) ⇒ x bnAdd y = y bnAdd x"/>
<org.eventb.theory.core.theorem name="6" org.eventb.core.label="Commutativity Equiv" org.eventb.core.predicate="∀x, y·x bnAdd y bnEquiv y bnAdd x"/>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="Pull Increment Out of Addition right" org.eventb.core.predicate="∀x, y·bnIsNormal(x) ∧ bnIsNormal(y) ⇒ x bnAdd bnIncrement(y) = bnIncrement(x bnAdd y)"/>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="Pull Increment Out of Addition right Equiv" org.eventb.core.predicate="∀x, y· x bnAdd bnIncrement(y) bnEquiv bnIncrement(x bnAdd y)"/>
<org.eventb.theory.core.theorem name="," org.eventb.core.label="Swap suc in Addition" org.eventb.core.predicate="∀x,y·bnIsNormal(x) ∧ bnIsNormal(y) ⇒ bnIncrement(x) bnAdd y = x bnAdd bnIncrement(y)"/>
<org.eventb.theory.core.theorem name="7" org.eventb.core.label="Swap suc in Addition Equiv" org.eventb.core.predicate="∀x,y·bnIncrement(x) bnAdd y bnEquiv x bnAdd bnIncrement(y)"/>
<org.eventb.theory.core.theorem name="9" org.eventb.core.label="Associative Equiv" org.eventb.core.predicate="∀x, y, z· x bnAdd (y bnAdd z) bnEquiv (x bnAdd y) bnAdd z"/>
<org.eventb.theory.core.theorem name="8" org.eventb.core.label="bnAddNorm is Associative lemma" org.eventb.core.predicate="∀x, y, z·x ∈ bnNatNorm ∧ y ∈ bnNatNorm ∧ z ∈ bnNatNorm ⇒ x bnAddNorm (y bnAddNorm z) = (x bnAddNorm y) bnAddNorm z"/>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="bnAdd is Associative" org.eventb.core.predicate="bnAddNorm_P ∈ AssocOp(bnNatNorm)"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="pAdd is Commutative" org.eventb.core.predicate="bnAddNorm_P ∈ CommOp(bnNatNorm)"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="pAdd is Abelian" org.eventb.core.predicate="bnAddNorm_P ∈ AbelianOp(bnNatNorm)"/>
<org.eventb.theory.core.theorem name="*" org.eventb.core.label="Add is a monoid" org.eventb.core.predicate="bnZero ↦ bnAddNorm_P ∈ Monoid(bnNatNorm)"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="Addition Reduction Equiv" org.eventb.core.predicate="∀x, y, z·x bnAdd y bnEquiv x bnAdd z ⇔ y bnEquiv z"/>
<org.eventb.theory.core.theorem name="1" org.eventb.core.label="Addition Reduction Normal" org.eventb.core.predicate="∀x, y, z·x ∈ bnNatNorm ∧ y ∈ bnNatNorm ∧ z ∈ bnNatNorm ⇒ (x bnAdd y = x bnAdd z ⇔ y = z)"/>
<org.eventb.theory.core.theorem name="2" org.eventb.core.label="non−zero addition" org.eventb.core.predicate="∀x, y·¬bnIsZero(x) ∨ ¬bnIsZero(y) ⇔ ¬bnIsZero(x bnAdd y)"/>
<org.eventb.theory.core.theorem name="3" org.eventb.core.label="x + y = x ⇔ y = 0" org.eventb.core.predicate="∀x, y·x bnAdd y bnEquiv x ⇔ bnIsZero(y)"/>
<org.eventb.theory.core.importTheoryProject name="(" org.eventb.theory.core.importTheoryProject="/BinaryNaturals">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/BinaryNaturals/bn_to_pBijection.dtf|org.eventb.theory.core.deployedTheoryRoot#bn_to_pBijection"/>
<org.eventb.theory.core.importTheory name="(" org.eventb.theory.core.importTheory="/BinaryNaturals/bnEquivIso.dtf|org.eventb.theory.core.deployedTheoryRoot#bnEquivIso"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.proofRulesBlock name=":" org.eventb.core.label="Type rewrites">
<org.eventb.theory.core.rewriteRule name="'" org.eventb.core.label="rew1" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="is Associative" org.eventb.theory.core.formula="bnAddNorm_P ∈ AssocOp(bnNatNorm)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="(" org.eventb.core.label="rew2" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="is Commutative" org.eventb.theory.core.formula="bnAddNorm_P ∈ CommOp(bnNatNorm)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name=")" org.eventb.core.label="rew3" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="is Abelian" org.eventb.theory.core.formula="bnAddNorm_P ∈ AbelianOp(bnNatNorm)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤ "/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="rew4" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="is a Monoid" org.eventb.theory.core.formula="bnZero ↦ bnAddNorm_P ∈ Monoid(bnNatNorm)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤ "/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name=";" org.eventb.core.label="Cancelling terms">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="z" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="cancel 1 Norm" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Cancel" org.eventb.theory.core.formula="x bnAdd y = x bnAdd z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y) ∧ bnIsNormal(z)" org.eventb.theory.core.formula="y = z"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="cancel 2 Norm" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Cancel" org.eventb.theory.core.formula="y bnAdd x = z bnAdd x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y) ∧ bnIsNormal(z)" org.eventb.theory.core.formula="y = z"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="cancel 3 Norm" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Cancel" org.eventb.theory.core.formula="x bnAdd y = z bnAdd x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y) ∧ bnIsNormal(z)" org.eventb.theory.core.formula="y = z"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="-" org.eventb.core.label="Cancel To Zero Norm" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="cancel" org.eventb.theory.core.formula="x bnAdd y = x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y)" org.eventb.theory.core.formula="y = nil"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="." org.eventb.core.label="Cancel To Zero Norm 2" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="cancel" org.eventb.theory.core.formula="y bnAdd x = x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y)" org.eventb.theory.core.formula="y = nil"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name="=" org.eventb.core.label="Brackating">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="z" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="Bracket Right Norm" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Bracket Right" org.eventb.theory.core.formula="(x bnAdd y) bnAdd z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y) ∧ bnIsNormal(z)" org.eventb.theory.core.formula="x bnAdd (y bnAdd z)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="Bracket Left Norm" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Bracket Left" org.eventb.theory.core.formula="x bnAdd (y bnAdd z)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bnIsNormal(x) ∧ bnIsNormal(y) ∧ bnIsNormal(z)" org.eventb.theory.core.formula="(x bnAdd y) bnAdd z"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
</org.eventb.theory.core.theoryRoot>
