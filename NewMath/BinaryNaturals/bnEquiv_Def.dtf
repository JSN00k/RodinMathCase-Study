<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="a0bf149dd485bf87725003fe31a17122" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="BitwiseOps" org.eventb.core.scTarget="/BinaryNaturals/BitwiseOps.dtf|org.eventb.theory.core.deployedTheoryRoot#BitwiseOps"/>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="bnEquiv" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.relOp" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="bnIsZero(y)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(xB,xs)" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="xB=bnLSB(y)∧xs bnEquiv bnShiftLeft(y)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="bnEquivB" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="BOOL" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="bool(x bnEquiv y)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="bnEquivB_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(List(BOOL)×List(BOOL)×BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λx⦂List(BOOL) ↦ y⦂List(BOOL)·⊤ ∣ x bnEquivB y"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="bnEquiv ⇔ bnEquivB = TRUE" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x bnEquiv y⇔x bnEquivB y=TRUE" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="reflexivity" org.eventb.core.predicate="∀x⦂List(BOOL)·x bnEquiv x" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="= ⇒ Equiv" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x=y⇒x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="Equiv ⇒ same bit count" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x bnEquiv y⇒bnCountBits(x)=bnCountBits(y)" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="xB" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="bnEquiv_Def.bnEquiv case 0" org.eventb.core.accurate="true" org.eventb.core.label="bnEquiv_Def.bnEquiv case 0" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnEquiv expansion" org.eventb.theory.core.formula="(nil ⦂ List(BOOL)) bnEquiv y">
<org.eventb.theory.core.scRewriteRuleRHS name="bnEquiv rhs" org.eventb.core.label="bnEquiv rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="bnIsZero(y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bnEquiv_Def.bnEquiv case 1" org.eventb.core.accurate="true" org.eventb.core.label="bnEquiv_Def.bnEquiv case 1" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnEquiv expansion" org.eventb.theory.core.formula="cons(xB,xs) bnEquiv y">
<org.eventb.theory.core.scRewriteRuleRHS name="bnEquiv rhs" org.eventb.core.label="bnEquiv rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="xB=bnLSB(y)∧xs bnEquiv bnShiftLeft(y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bnEquiv_Def.bnEquivB" org.eventb.core.accurate="true" org.eventb.core.label="bnEquiv_Def.bnEquivB" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnEquivB expansion" org.eventb.theory.core.formula="x bnEquivB y">
<org.eventb.theory.core.scRewriteRuleRHS name="bnEquivB rhs" org.eventb.core.label="bnEquivB rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="bool(x bnEquiv y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bnEquiv_Def.bnEquivB_P" org.eventb.core.accurate="true" org.eventb.core.label="bnEquiv_Def.bnEquivB_P" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnEquivB_P expansion" org.eventb.theory.core.formula="bnEquivB_P ⦂ ℙ(List(BOOL)×List(BOOL)×BOOL)">
<org.eventb.theory.core.scRewriteRuleRHS name="bnEquivB_P rhs" org.eventb.core.label="bnEquivB_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="λx⦂List(BOOL) ↦ y⦂List(BOOL)·⊤ ∣ x bnEquivB y"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocp" org.eventb.core.label="basic rewrites" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.metaVariable#*" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="z" org.eventb.core.accurate="true" org.eventb.core.label="reflexive" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.rewriteRule#(" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="reflexive" org.eventb.theory.core.formula="x bnEquiv x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.rewriteRule#(|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scInferenceRule name="{" org.eventb.core.accurate="true" org.eventb.core.label="= ⇒ equiv" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="= =&gt; equiv" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x=y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="|" org.eventb.core.accurate="true" org.eventb.core.label="inf1" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="Equiv to EquivB" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="x bnEquivB y=TRUE" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="true"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="}" org.eventb.core.accurate="true" org.eventb.core.label="inf2" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="EquivB to Equiv TRUE" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#,|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x bnEquivB y=TRUE" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#,|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="true"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="~" org.eventb.core.accurate="true" org.eventb.core.label="inf3" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="EquivB to Equiv FALSE" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="¬x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#-|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x bnEquivB y=FALSE" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#-|org.eventb.theory.core.inferenceRule#-|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="true"/>
</org.eventb.theory.core.scInferenceRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocq" org.eventb.core.label="Equiv countBits" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.metaVariable#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scInferenceRule name="z" org.eventb.core.accurate="true" org.eventb.core.label="x Equiv y ⇒ same bit count" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.inferenceRule#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="countBits(x) = countBits(y)" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="bnCountBits(x)=bnCountBits(y)" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.inferenceRule#)|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="{" org.eventb.core.accurate="true" org.eventb.core.label="x Equiv y ⇒ same bit count in hyp" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.inferenceRule#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="countBits(x) = countBits(y)" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="bnCountBits(x)=bnCountBits(y)" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x bnEquiv y" org.eventb.core.source="/BinaryNaturals/bnEquiv_Def.tuf|org.eventb.theory.core.theoryRoot#bnEquiv_Def|org.eventb.theory.core.proofRulesBlock#0|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="true"/>
</org.eventb.theory.core.scInferenceRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
