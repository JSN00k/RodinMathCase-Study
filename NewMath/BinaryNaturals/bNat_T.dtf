<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="3685e2d52200cd733a059082c11bb5c2" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="List" org.eventb.core.scTarget="/ListTheory/List.dtf|org.eventb.theory.core.deployedTheoryRoot#List"/>
<org.eventb.theory.core.useTheory name="BOOL" org.eventb.core.scTarget="/BOOL/BOOL.dtf|org.eventb.theory.core.deployedTheoryRoot#BOOL"/>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="bnIsNormal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(xB,xs)" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(xs=(nil ⦂ List(BOOL))∧xB=TRUE)∨(xs≠(nil ⦂ List(BOOL))∧bnIsNormal(xs))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="bnZero" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="+" org.eventb.core.label="bnOne" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="cons(TRUE,nil ⦂ List(BOOL))"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="x ≠ nil expansion" org.eventb.core.predicate="∀x⦂List(BOOL)·x∈List(BOOL)⇒(x≠(nil ⦂ List(BOOL))⇔(∃xB⦂BOOL,xs⦂List(BOOL)·x=cons(xB,xs)))" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="xB" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="bNat_T.bnIsNormal case 0" org.eventb.core.accurate="true" org.eventb.core.label="bNat_T.bnIsNormal case 0" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnIsNormal expansion" org.eventb.theory.core.formula="bnIsNormal(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bnIsNormal rhs" org.eventb.core.label="bnIsNormal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bNat_T.bnIsNormal case 1" org.eventb.core.accurate="true" org.eventb.core.label="bNat_T.bnIsNormal case 1" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnIsNormal expansion" org.eventb.theory.core.formula="bnIsNormal(cons(xB,xs))">
<org.eventb.theory.core.scRewriteRuleRHS name="bnIsNormal rhs" org.eventb.core.label="bnIsNormal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="(xs=(nil ⦂ List(BOOL))∧xB=TRUE)∨(xs≠(nil ⦂ List(BOOL))∧bnIsNormal(xs))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bNat_T.bnZero" org.eventb.core.accurate="true" org.eventb.core.label="bNat_T.bnZero" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnZero expansion" org.eventb.theory.core.formula="bnZero ⦂ List(BOOL)">
<org.eventb.theory.core.scRewriteRuleRHS name="bnZero rhs" org.eventb.core.label="bnZero rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bNat_T.bnOne" org.eventb.core.accurate="true" org.eventb.core.label="bNat_T.bnOne" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnOne expansion" org.eventb.theory.core.formula="bnOne ⦂ List(BOOL)">
<org.eventb.theory.core.scRewriteRuleRHS name="bnOne rhs" org.eventb.core.label="bnOne rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bNat_T.tuf|org.eventb.theory.core.theoryRoot#bNat_T|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="cons(TRUE,nil ⦂ List(BOOL))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
