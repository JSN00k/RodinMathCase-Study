<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="d470c4c5e2deb83b6f42bcb33497f18a" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="bnIncrementOp" org.eventb.core.scTarget="/BinaryNaturals/bnIncrementOp.dtf|org.eventb.theory.core.deployedTheoryRoot#bnIncrementOp"/>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="bnToPNat" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="zero ⦂ pNat"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(xB,xs)" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(xB=TRUE,(one ⦂ pNat) pAdd ((two ⦂ pNat) pTimes bnToPNat(xs)),(two ⦂ pNat) pTimes bnToPNat(xs))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="pToBnNat" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(xs)" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="bnIncrement(pToBnNat(xs))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="toBnIsNormal" org.eventb.core.predicate="∀x⦂pNat·bnIsNormal(pToBnNat(x))" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.theorem#*" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="bnIsZero(x) &lt;=&gt; bnToPNat(x) = zero" org.eventb.core.predicate="∀x⦂List(BOOL)·bnIsZero(x)⇔bnToPNat(x)=(zero ⦂ pNat)" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="xB" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="x_" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="xs_" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="bn_to_pFunctions.bnToPNat case 0" org.eventb.core.accurate="true" org.eventb.core.label="bn_to_pFunctions.bnToPNat case 0" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnToPNat expansion" org.eventb.theory.core.formula="bnToPNat(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bnToPNat rhs" org.eventb.core.label="bnToPNat rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.formula="zero ⦂ pNat"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bn_to_pFunctions.bnToPNat case 1" org.eventb.core.accurate="true" org.eventb.core.label="bn_to_pFunctions.bnToPNat case 1" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bnToPNat expansion" org.eventb.theory.core.formula="bnToPNat(cons(xB,xs))">
<org.eventb.theory.core.scRewriteRuleRHS name="bnToPNat rhs" org.eventb.core.label="bnToPNat rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.formula="COND(xB=TRUE,(one ⦂ pNat) pAdd ((two ⦂ pNat) pTimes bnToPNat(xs)),(two ⦂ pNat) pTimes bnToPNat(xs))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bn_to_pFunctions.pToBnNat case 0" org.eventb.core.accurate="true" org.eventb.core.label="bn_to_pFunctions.pToBnNat case 0" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pToBnNat expansion" org.eventb.theory.core.formula="pToBnNat(zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="pToBnNat rhs" org.eventb.core.label="pToBnNat rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="bn_to_pFunctions.pToBnNat case 1" org.eventb.core.accurate="true" org.eventb.core.label="bn_to_pFunctions.pToBnNat case 1" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pToBnNat expansion" org.eventb.theory.core.formula="pToBnNat(suc(xs_))">
<org.eventb.theory.core.scRewriteRuleRHS name="pToBnNat rhs" org.eventb.core.label="pToBnNat rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="bnIncrement(pToBnNat(xs_))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocn" org.eventb.core.label="rulesBlock1" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.proofRulesBlock#,">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="y" org.eventb.core.accurate="true" org.eventb.core.label="bnIsZero(x) =&gt; bnToPNat(x) = zero" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="bnIsZero(x) =&gt; bnToPNat(x) = zero" org.eventb.theory.core.formula="bnIsZero(x)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#(|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bnToPNat(x)=(zero ⦂ pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="z" org.eventb.core.accurate="true" org.eventb.core.label="bnToPNat(x) = zero =&gt; bnIsZero(x)" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="bnToPNat(x) = zero =&gt; bnIsZero(x)" org.eventb.theory.core.formula="bnToPNat(x)=(zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNaturals/bn_to_pFunctions.tuf|org.eventb.theory.core.theoryRoot#bn_to_pFunctions|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#)|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bnIsZero(x)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
