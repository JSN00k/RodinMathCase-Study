<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/BinaryNaturals">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/BinaryNaturals/bnEquiv_Def.dtf|org.eventb.theory.core.deployedTheoryRoot#bnEquiv_Def"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="bnMkZero" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="pNat" org.eventb.core.identifier="n"/>
<org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="zero" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.theory.core.formula="cons(FALSE, bnMkZero(ns))"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name=")" org.eventb.core.label="bnAppendZeros" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="List(BOOL)" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="pNat" org.eventb.core.identifier="n"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="appendList(x, bnMkZero(n))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.importTheoryProject name="*" org.eventb.theory.core.importTheoryProject="/ListTheory">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/ListTheory/_ListTheorems.dtf|org.eventb.theory.core.deployedTheoryRoot#_ListTheorems"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.theorem name="B" org.eventb.core.label="zeros on end of number" org.eventb.core.predicate="∀x·∃n·length(bnRemTrailingZeros(x)) pAdd n = length(x)"/>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="mkZero makes zeros" org.eventb.core.predicate="∀n· bnIsZero(bnMkZero(n))"/>
<org.eventb.theory.core.theorem name=":" org.eventb.core.label="MkZeroEqu" org.eventb.core.predicate="∀n,m · bnMkZero(n) = bnMkZero(m) ⇔ n = m"/>
<org.eventb.theory.core.theorem name=";" org.eventb.core.label="MkZero Arithmetic" org.eventb.core.predicate="∀n, m· bnMkZero(n pAdd m) = appendList(bnMkZero(n), bnMkZero(m))"/>
<org.eventb.theory.core.theorem name="," org.eventb.core.label="x bnEquiv nil ⇔ bnIsZero(x)" org.eventb.core.predicate="∀x·x bnEquiv nil ⇔ bnIsZero(x)"/>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="nil bnEquiv x ⇔ bnIsZero(x)" org.eventb.core.predicate="∀x· nil bnEquiv x ⇔ bnIsZero(x)"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="AppendZero ≠ nil" org.eventb.core.predicate="∀x, n·n ≠ zero ⇒ bnAppendZeros(x, n) ≠ nil"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="AppendZeros = nil implication" org.eventb.core.predicate="∀x, n· x = nil ∧ n = zero ⇔ bnAppendZeros(x, n) = nil"/>
<org.eventb.theory.core.theorem name="1" org.eventb.core.label="AppendZeros to zero is zero" org.eventb.core.predicate="∀x, n · bnIsZero(x) ⇔ bnIsZero(bnAppendZeros(x, n))"/>
<org.eventb.theory.core.theorem name="2" org.eventb.core.label="AppendZerosSameBitCount" org.eventb.core.predicate="∀x, n· bnCountBits(x) = bnCountBits(bnAppendZeros(x, n))"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="appendZerosEquality" org.eventb.core.predicate="∀x, y· x bnEquiv y ⇔ (∃n· x = bnAppendZeros(y, n) ∨ bnAppendZeros(x, n) = y)"/>
<org.eventb.theory.core.theorem name="A" org.eventb.core.label="removeZeros not equal" org.eventb.core.predicate="∀x·∃n· x = bnAppendZeros(bnRemTrailingZeros(x), n)"/>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="Append(Append(x, n), m) = Append(x, n + m)" org.eventb.core.predicate="∀x, n, m·bnAppendZeros(bnAppendZeros(x, n), m) = bnAppendZeros(x, n pAdd m)"/>
<org.eventb.theory.core.theorem name="3" org.eventb.core.label="zero Equiv zero" org.eventb.core.predicate="∀x, y · bnIsZero(x) ∧ bnIsZero(y) ⇒ x bnEquiv y"/>
<org.eventb.theory.core.theorem name="7" org.eventb.core.label="zero Equiv y ⇒ y is zero" org.eventb.core.predicate="∀x, y·bnIsZero(x) ∧ x bnEquiv y ⇒ bnIsZero(y)"/>
<org.eventb.theory.core.theorem name="8" org.eventb.core.label="x Equiv zero ⇒ x is Zero" org.eventb.core.predicate="∀x, y· x bnEquiv y ∧ bnIsZero(y) ⇒ bnIsZero(x)"/>
<org.eventb.theory.core.theorem name="9" org.eventb.core.label="AppendZerosArithmetic" org.eventb.core.predicate="∀x, y, n, m· bnAppendZeros(x, n) = bnAppendZeros(y, n pAdd m) ⇔ x = bnAppendZeros(y, m)"/>
<org.eventb.theory.core.theorem name="?" org.eventb.core.label="Symetric Lemma" org.eventb.core.predicate="∀x, y· x bnEquiv y ⇒ y bnEquiv x"/>
<org.eventb.theory.core.theorem name="@" org.eventb.core.label="symetric" org.eventb.core.predicate="∀x, y· x bnEquiv y ⇔ y bnEquiv x"/>
<org.eventb.theory.core.theorem name="=" org.eventb.core.label="AppendZeros Preserves Equiv Lemma1" org.eventb.core.predicate="∀x, y, n · x bnEquiv y ⇒ bnAppendZeros(x, n) bnEquiv y ∧ x bnEquiv bnAppendZeros(y, n)"/>
<org.eventb.theory.core.theorem name="&gt;" org.eventb.core.label="AppendZeros Preserves Equiv Lemma2" org.eventb.core.predicate="∀x, y, n · bnAppendZeros(x, n) bnEquiv y ⇒ x bnEquiv y"/>
<org.eventb.theory.core.theorem name="6" org.eventb.core.label="AppendZeros Preserves Equiv" org.eventb.core.predicate="∀x, y, n · x bnEquiv y ⇔  bnAppendZeros(x, n) bnEquiv y ∧ x bnEquiv bnAppendZeros(y, n)"/>
<org.eventb.theory.core.proofRulesBlock name="5" org.eventb.core.label="rulesBlock1">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="List(BOOL)"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="n" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="*" org.eventb.core.identifier="m" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="AppendZeroReduction" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="AppendZeros Reduction" org.eventb.theory.core.formula="bnAppendZeros(bnAppendZeros(x, n), m)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="bnAppendZeros(x, n pAdd m)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.inferenceRule name="," org.eventb.core.label="equiz to append zeros" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="equiv to appended zero equality">
<org.eventb.theory.core.given name="'" org.eventb.core.predicate="x bnEquiv y" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.infer name="(" org.eventb.core.predicate="∃n· x = bnAppendZeros(y, n) ∨ bnAppendZeros(x, n) = y"/>
</org.eventb.theory.core.inferenceRule>
<org.eventb.theory.core.inferenceRule name="-" org.eventb.core.label="zero = zero" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="zero = zero">
<org.eventb.theory.core.given name="'" org.eventb.core.predicate="bnIsZero(x) ∧ bnIsZero(y)" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.infer name="(" org.eventb.core.predicate="x bnEquiv y"/>
</org.eventb.theory.core.inferenceRule>
<org.eventb.theory.core.rewriteRule name="." org.eventb.core.label="equivToSelf" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x equiv to self" org.eventb.theory.core.formula="x bnEquiv bnAppendZeros(x, n)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="/" org.eventb.core.label="equivToSelf2" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x equiv to self" org.eventb.theory.core.formula="bnAppendZeros(x, n) bnEquiv x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
</org.eventb.theory.core.theoryRoot>
