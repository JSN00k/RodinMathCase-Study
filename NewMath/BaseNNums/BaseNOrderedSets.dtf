<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="75fb767b1fd264a9d284226507a96338" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="BaseNLeq" org.eventb.core.scTarget="/BaseNNums/BaseNLeq.dtf|org.eventb.theory.core.deployedTheoryRoot#BaseNLeq"/>
<org.eventb.theory.core.useTheory name="OrderedSets" org.eventb.core.scTarget="/Ordered/OrderedSets.dtf|org.eventb.theory.core.deployedTheoryRoot#OrderedSets"/>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="BNumDecrN" org.eventb.core.predicate="d∈(BNum ⦂ ℙ(List(pNat)×pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(pNat)×pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="d" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(pNat)×pNat"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="'" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#'" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="d"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(dn)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="BNumDecrN(WGoodDecr(d),dn)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="BNumNthDigitInternal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(pNat)"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="BNumLSDInternal(l)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="BNumNthDigitInternal(BNumShiftLeftInternal(l),ns)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="+" org.eventb.core.label="BNumNthDigit" org.eventb.core.predicate="BN∈(BNum ⦂ ℙ(List(pNat)×pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="BN∈dom(prj1 ⦂ ℙ(List(pNat)×pNat×List(pNat)))∧(prj1 ⦂ ℙ(List(pNat)×pNat×List(pNat)))∈List(pNat ⦂ ℙ(pNat)) × (pNat ⦂ ℙ(pNat)) ⇸ List(pNat ⦂ ℙ(pNat))">
<org.eventb.theory.core.scOperatorArgument name="BN" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(pNat)×pNat"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="BNumNthDigitInternal(BNumList(BN),n)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="," org.eventb.core.label="BNumMkZeros" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(pNat)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(pNat)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(zero ⦂ pNat,BNumMkZeros(ns))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="-" org.eventb.core.label="BNumMkKsN" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(pNat)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="k" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(pNat)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(k,BNumMkKsN(k,ns))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="." org.eventb.core.label="BNumDigitsGreqNInternal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(pNat)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(pNat)"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="x"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="BNumDigitsGreqNInternal(BNumShiftLeftInternal(x),ns)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="/" org.eventb.core.label="BNumDigitsLtNInternal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(pNat)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(pNat)"/>
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(pNat)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(x=(nil ⦂ List(pNat)),nil ⦂ List(pNat),cons(BNumLSDInternal(x),BNumDigitsLtNInternal(BNumShiftLeftInternal(x),ns)))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="BNumMKKsN suc to append" org.eventb.core.predicate="∀n⦂pNat,x⦂pNat·BNumMkKsN(x,suc(n))=append(BNumMkKsN(x,n),x)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#H" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="existence of appends" org.eventb.core.predicate="∀x⦂List(pNat)·x∈List(pNat ⦂ ℙ(pNat))∧x≠(nil ⦂ List(pNat))⇒(∃xH⦂List(pNat),xN⦂pNat·x=append(xH,xN))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#[" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="DecrN Expand to addition" org.eventb.core.predicate="∀m⦂pNat,n⦂pNat·∀x⦂List(pNat)×pNat·BNumDecrN(x,m pAdd n)=BNumDecrN(BNumDecrN(x,m),n)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#N" org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="nil |-&gt; 2 infimum" org.eventb.core.predicate="∀x⦂List(pNat)×pNat·BNumIsWD(BNumList(x),BNumBase(x))⇒(nil ⦂ List(pNat)) ↦ (two ⦂ pNat) BNumLeq x" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="Ordered With Infimum" org.eventb.core.predicate="(BNumLeqB_P ⦂ ℙ(List(pNat)×pNat×(List(pNat)×pNat)×BOOL)) ↦ ((nil ⦂ List(pNat)) ↦ (two ⦂ pNat))∈leqInfim(BNumNorm ⦂ ℙ(List(pNat)×pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#(" org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="WGoodDecrReduceFirstDigitToZero" org.eventb.core.predicate="∀xH⦂pNat·∀xT⦂List(pNat),B⦂pNat·xT≠(nil ⦂ List(pNat))⇒BNumDecrN(cons(xH,xT) ↦ B,xH)=cons(zero ⦂ pNat,xT) ↦ B pAdd xH" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#3" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="Ordered Infinmum Decr" org.eventb.core.predicate="(BNumLeqB_P ⦂ ℙ(List(pNat)×pNat×(List(pNat)×pNat)×BOOL)) ↦ ((nil ⦂ List(pNat)) ↦ (two ⦂ pNat)) ↦ (WGoodDecr_P ⦂ ℙ(List(pNat)×pNat×(List(pNat)×pNat)))∈Decrementer(BNumNorm ⦂ ℙ(List(pNat)×pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#*" org.eventb.theory.core.order="6"/>
<org.eventb.theory.core.scTheorem name="generatedBlocs" org.eventb.core.label="WGoodDecr leq length" org.eventb.core.predicate="∀x⦂List(pNat),B⦂pNat·length(BNumList(WGoodDecr(x ↦ B))) pLeq length(x)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#Q" org.eventb.theory.core.order="7"/>
<org.eventb.theory.core.scTheorem name="generatedBloct" org.eventb.core.label="Decr nil |-&gt; two = nil |-&gt; two" org.eventb.core.predicate="∀n⦂pNat·BNumDecrN((nil ⦂ List(pNat)) ↦ (two ⦂ pNat),n)=(nil ⦂ List(pNat)) ↦ (two ⦂ pNat)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#7" org.eventb.theory.core.order="8"/>
<org.eventb.theory.core.scTheorem name="generatedBlocu" org.eventb.core.label="decr nil |-&gt; B at least once gives nil |-&gt; two" org.eventb.core.predicate="∀B⦂pNat,n⦂pNat·n≠(zero ⦂ pNat)⇒BNumDecrN((nil ⦂ List(pNat)) ↦ B,n)=(nil ⦂ List(pNat)) ↦ (two ⦂ pNat)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#8" org.eventb.theory.core.order="9"/>
<org.eventb.theory.core.scTheorem name="generatedBlocv" org.eventb.core.label="WGoodDecr out of baseNDecr" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat)×pNat·BNumDecrN(WGoodDecr(x),n)=WGoodDecr(BNumDecrN(x,n))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#9" org.eventb.theory.core.order="10"/>
<org.eventb.theory.core.scTheorem name="generatedBlocw" org.eventb.core.label="WGood Maintains Normality" org.eventb.core.predicate="∀x⦂List(pNat)·∀B⦂pNat·B≠(zero ⦂ pNat)∧BaseNIsNormalInternal(x)⇒BaseNIsNormalInternal(BNumList(WGoodDecr(x ↦ B)))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#V" org.eventb.theory.core.order="11"/>
<org.eventb.theory.core.scTheorem name="generatedBlocx" org.eventb.core.label="DecrN Maintains Normality" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat),B⦂pNat·B≠(zero ⦂ pNat)∧BaseNIsNormalInternal(x)⇒BaseNIsNormalInternal(BNumList(BNumDecrN(x ↦ B,n)))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#S" org.eventb.theory.core.order="12"/>
<org.eventb.theory.core.scTheorem name="generatedBlocy" org.eventb.core.label="BNumDecrN leq length" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat),B⦂pNat·length(BNumList(BNumDecrN(x ↦ B,n))) pLeq length(x)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#R" org.eventb.theory.core.order="13"/>
<org.eventb.theory.core.scTheorem name="generatedBlocz" org.eventb.core.label="DecrN expansion" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat)×pNat·x∈(BNumNorm ⦂ ℙ(List(pNat)×pNat))⇒BNumDecrN(x,suc(n))=BNumDecrN(BNumDecrN(x,n),one ⦂ pNat)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#6" org.eventb.theory.core.order="14"/>
<org.eventb.theory.core.scTheorem name="generatedBloc{" org.eventb.core.label="length BNumDigitsLtNInternal" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat)·n pLeq length(x)⇒length(BNumDigitsLtNInternal(x,n))=n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#=" org.eventb.theory.core.order="15"/>
<org.eventb.theory.core.scTheorem name="generatedBloc|" org.eventb.core.label="length BNumDigitsGreqNInternal" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat)·n pLeq length(x)⇒length(BNumDigitsGreqNInternal(x,n)) pAdd n=length(x)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#&gt;" org.eventb.theory.core.order="16"/>
<org.eventb.theory.core.scTheorem name="generatedBloc}" org.eventb.core.label="Split out BNum" org.eventb.core.predicate="∀x⦂List(pNat)·∀n⦂pNat·x≠(nil ⦂ List(pNat))∧n pLt length(x)⇒x=appendList(append(BNumDigitsLtNInternal(x,n),BNumNthDigitInternal(x,n)),BNumDigitsGreqNInternal(x,suc(n)))∧length(x)=suc(length(BNumDigitsLtNInternal(x,n)) pAdd length(BNumDigitsGreqNInternal(x,suc(n))))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#:" org.eventb.theory.core.order="17"/>
<org.eventb.theory.core.scTheorem name="generatedBloc~" org.eventb.core.label="Split BNum With Existance" org.eventb.core.predicate="∀x⦂List(pNat),n⦂pNat·x≠(nil ⦂ List(pNat))∧n pLt length(x)⇒(∃xH⦂List(pNat),xN⦂pNat,xT⦂List(pNat)·xH=BNumDigitsLtNInternal(x,n)∧xN=BNumNthDigitInternal(x,n)∧xT=BNumDigitsGreqNInternal(x,suc(n))∧appendList(append(xH,xN),xT)=x∧length(x)=suc(length(xH) pAdd length(xT)))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#@" org.eventb.theory.core.order="18"/>
<org.eventb.theory.core.scTheorem name="generatedBlod'" org.eventb.core.label="LtDigits Spilt Counting" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat)·n pLt length(x)∧n≠(zero ⦂ pNat)⇒n=suc(length(BNumDigitsLtNInternal(x,n)))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#A" org.eventb.theory.core.order="19"/>
<org.eventb.theory.core.scTheorem name="generatedBlod(" org.eventb.core.label="Greq on cons(xH, xT)" org.eventb.core.predicate="∀xH⦂pNat,xT⦂List(pNat),n⦂pNat·BNumDigitsGreqNInternal(xT,n)=BNumDigitsGreqNInternal(cons(xH,xT),suc(n))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#D" org.eventb.theory.core.order="20"/>
<org.eventb.theory.core.scTheorem name="generatedBlod)" org.eventb.core.label="Greq on split" org.eventb.core.predicate="∀xH⦂List(pNat),xN⦂pNat,xT⦂List(pNat)·BNumDigitsGreqNInternal(appendList(append(xH,xN),xT),suc(length(xH)))=xT" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#I" org.eventb.theory.core.order="21"/>
<org.eventb.theory.core.scTheorem name="generatedBlod*" org.eventb.core.label="Greq One less" org.eventb.core.predicate="∀xH⦂List(pNat),xN⦂pNat,xT⦂List(pNat)·BNumDigitsGreqNInternal(appendList(append(xH,xN),xT),length(xH))=cons(xN,xT)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#G" org.eventb.theory.core.order="22"/>
<org.eventb.theory.core.scTheorem name="generatedBlod+" org.eventb.core.label="greqDigits Split Counting" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat)·length(x) pMinus n=length(BNumDigitsGreqNInternal(x,n))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#B" org.eventb.theory.core.order="23"/>
<org.eventb.theory.core.scTheorem name="generatedBlod," org.eventb.core.label="nth Digit of split num" org.eventb.core.predicate="∀n⦂pNat·∀xH⦂List(pNat),xN⦂pNat,xT⦂List(pNat)·length(xH)=n⇒BNumNthDigitInternal(appendList(append(xH,xN),xT),n)=xN" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#C" org.eventb.theory.core.order="24"/>
<org.eventb.theory.core.scTheorem name="generatedBlod-" org.eventb.core.label="Zero case Decr All Zeros" org.eventb.core.predicate="∀pH⦂pNat·∀pT⦂List(pNat),B⦂pNat·cons(pH,pT) ↦ B∈(BNumNorm ⦂ ℙ(List(pNat)×pNat))∧(two ⦂ pNat) pLeq length(cons(pH,pT))⇒BNumDecrN(cons(pH,pT) ↦ B,suc(pH))=cons(B pAdd pH,BaseNDecrementInternal(pT,suc(B pAdd pH))) ↦ suc(B pAdd pH)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#?" org.eventb.theory.core.order="25"/>
<org.eventb.theory.core.scTheorem name="generatedBlod." org.eventb.core.label="Decr All cases" org.eventb.core.predicate="∀n⦂pNat·∀x⦂List(pNat),B⦂pNat·n pLt length(x)⇒(∃m⦂pNat,Bm⦂pNat·BNumDecrN(x ↦ B,m)=appendList(BNumMkKsN(pDecrement(Bm),n),BaseNDecrementInternal(BNumDigitsGreqNInternal(x,n),Bm)) ↦ Bm)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#4" org.eventb.theory.core.order="26"/>
<org.eventb.theory.core.scTheorem name="generatedBlod/" org.eventb.core.label="last digit not zero =&gt; normal" org.eventb.core.predicate="∀xH⦂List(pNat),xN⦂pNat·xN≠(zero ⦂ pNat)⇒BaseNIsNormalInternal(append(xH,xN))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#M" org.eventb.theory.core.order="27"/>
<org.eventb.theory.core.scTheorem name="generatedBlod0" org.eventb.core.label="Last Digit isn't zero" org.eventb.core.predicate="∀x⦂List(pNat)·BaseNIsNormalInternal(x)∧x≠(nil ⦂ List(pNat))⇔BNumNthDigitInternal(x,pDecrement(length(x)))≠(zero ⦂ pNat)" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#K" org.eventb.theory.core.order="28"/>
<org.eventb.theory.core.scTheorem name="generatedBlod1" org.eventb.core.label="Last Digit Equivalence" org.eventb.core.predicate="∀x⦂List(pNat)·x≠(nil ⦂ List(pNat))⇒BNumDigitsGreqNInternal(x,pDecrement(length(x)))=cons(BNumNthDigitInternal(x,pDecrement(length(x))),nil ⦂ List(pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#X" org.eventb.theory.core.order="29"/>
<org.eventb.theory.core.scTheorem name="generatedBlod2" org.eventb.core.label="DecrN increases Base" org.eventb.core.predicate="∀m⦂pNat·∀x⦂List(pNat),B⦂pNat·BNumList(BNumDecrN(x ↦ B,m))≠(nil ⦂ List(pNat))⇒BNumBase(BNumDecrN(x ↦ B,m))=B pAdd m" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#Y" org.eventb.theory.core.order="30"/>
<org.eventb.theory.core.scTheorem name="generatedBlod3" org.eventb.core.label="DecrN Creates Normality" org.eventb.core.predicate="∀x⦂List(pNat)·∀B⦂pNat·(two ⦂ pNat) pLeq B⇒(∃n⦂pNat·BaseNIsNormalInternal(BNumList(BNumDecrN(x ↦ B,n))))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#W" org.eventb.theory.core.order="31"/>
<org.eventb.theory.core.scTheorem name="generatedBlod4" org.eventb.core.label="DecrN Creates Normality All Cases" org.eventb.core.predicate="∀x⦂List(pNat)·∀B⦂pNat·∃n⦂pNat·BaseNIsNormalInternal(BNumList(BNumDecrN(x ↦ B,n)))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#Z" org.eventb.theory.core.order="32"/>
<org.eventb.theory.core.scTheorem name="generatedBlod5" org.eventb.core.label="Digits Greq length = nil" org.eventb.core.predicate="∀x⦂List(pNat)·BNumDigitsGreqNInternal(x,length(x))=(nil ⦂ List(pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#L" org.eventb.theory.core.order="33"/>
<org.eventb.theory.core.scTheorem name="generatedBlod6" org.eventb.core.label="Decr Reduces length" org.eventb.core.predicate="∀xN⦂pNat·∀B⦂pNat,xH⦂List(pNat)·BaseNIsNormalInternal(append(xH,xN))⇒(∃m⦂pNat·length(BNumList(BNumDecrN(append(xH,xN) ↦ B,m))) pLt length(append(xH,xN)))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#J" org.eventb.theory.core.order="34"/>
<org.eventb.theory.core.scTheorem name="generatedBlod7" org.eventb.core.label="Decr Reduces Length Not Norm" org.eventb.core.predicate="∀xN⦂pNat·∀B⦂pNat,xH⦂List(pNat)·∃m⦂pNat·length(BNumList(BNumDecrN(append(xH,xN) ↦ B,m))) pLt length(append(xH,xN))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#T" org.eventb.theory.core.order="35"/>
<org.eventb.theory.core.scTheorem name="generatedBlod8" org.eventb.core.label="WGood Weak general" org.eventb.core.predicate="∀x⦂List(pNat),B⦂pNat·∃m⦂pNat·BNumList(BNumDecrN(x ↦ B,m))=(nil ⦂ List(pNat))" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#P" org.eventb.theory.core.order="36"/>
<org.eventb.theory.core.scTheorem name="generatedBlod9" org.eventb.core.label="WGood Weak" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.theorem#O" org.eventb.theory.core.order="37"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+">
<org.eventb.theory.core.scMetavariable name="d" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="List(pNat)×pNat"/>
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="dn" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="l" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.core.type="List(pNat)"/>
<org.eventb.theory.core.scMetavariable name="ns" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="BN" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.core.type="List(pNat)×pNat"/>
<org.eventb.theory.core.scMetavariable name="k" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.core.type="List(pNat)"/>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumDecrN case 0" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumDecrN case 0" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumDecrN expansion" org.eventb.theory.core.formula="BNumDecrN(d,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumDecrN rhs" org.eventb.core.label="BNumDecrN rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="d"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumDecrN case 1" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumDecrN case 1" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumDecrN expansion" org.eventb.theory.core.formula="BNumDecrN(d,suc(dn))">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumDecrN rhs" org.eventb.core.label="BNumDecrN rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="BNumDecrN(WGoodDecr(d),dn)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumNthDigitInternal case 0" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumNthDigitInternal case 0" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumNthDigitInternal expansion" org.eventb.theory.core.formula="BNumNthDigitInternal(l,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumNthDigitInternal rhs" org.eventb.core.label="BNumNthDigitInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.formula="BNumLSDInternal(l)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumNthDigitInternal case 1" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumNthDigitInternal case 1" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumNthDigitInternal expansion" org.eventb.theory.core.formula="BNumNthDigitInternal(l,suc(ns))">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumNthDigitInternal rhs" org.eventb.core.label="BNumNthDigitInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.formula="BNumNthDigitInternal(BNumShiftLeftInternal(l),ns)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumNthDigit" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumNthDigit" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumNthDigit expansion" org.eventb.theory.core.formula="BNumNthDigit(BN,n)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumNthDigit rhs" org.eventb.core.label="BNumNthDigit rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.formula="BNumNthDigitInternal(BNumList(BN),n)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumMkZeros case 0" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumMkZeros case 0" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumMkZeros expansion" org.eventb.theory.core.formula="BNumMkZeros(zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumMkZeros rhs" org.eventb.core.label="BNumMkZeros rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.formula="nil ⦂ List(pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumMkZeros case 1" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumMkZeros case 1" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumMkZeros expansion" org.eventb.theory.core.formula="BNumMkZeros(suc(ns))">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumMkZeros rhs" org.eventb.core.label="BNumMkZeros rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.formula="cons(zero ⦂ pNat,BNumMkZeros(ns))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumMkKsN case 0" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumMkKsN case 0" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumMkKsN expansion" org.eventb.theory.core.formula="BNumMkKsN(k,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumMkKsN rhs" org.eventb.core.label="BNumMkKsN rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.formula="nil ⦂ List(pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumMkKsN case 1" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumMkKsN case 1" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumMkKsN expansion" org.eventb.theory.core.formula="BNumMkKsN(k,suc(ns))">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumMkKsN rhs" org.eventb.core.label="BNumMkKsN rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.formula="cons(k,BNumMkKsN(k,ns))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumDigitsGreqNInternal case 0" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumDigitsGreqNInternal case 0" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumDigitsGreqNInternal expansion" org.eventb.theory.core.formula="BNumDigitsGreqNInternal(x,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumDigitsGreqNInternal rhs" org.eventb.core.label="BNumDigitsGreqNInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.formula="x"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumDigitsGreqNInternal case 1" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumDigitsGreqNInternal case 1" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumDigitsGreqNInternal expansion" org.eventb.theory.core.formula="BNumDigitsGreqNInternal(x,suc(ns))">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumDigitsGreqNInternal rhs" org.eventb.core.label="BNumDigitsGreqNInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.formula="BNumDigitsGreqNInternal(BNumShiftLeftInternal(x),ns)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumDigitsLtNInternal case 0" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumDigitsLtNInternal case 0" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumDigitsLtNInternal expansion" org.eventb.theory.core.formula="BNumDigitsLtNInternal(x,zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumDigitsLtNInternal rhs" org.eventb.core.label="BNumDigitsLtNInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.formula="nil ⦂ List(pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BaseNOrderedSets.BNumDigitsLtNInternal case 1" org.eventb.core.accurate="true" org.eventb.core.label="BaseNOrderedSets.BNumDigitsLtNInternal case 1" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BNumDigitsLtNInternal expansion" org.eventb.theory.core.formula="BNumDigitsLtNInternal(x,suc(ns))">
<org.eventb.theory.core.scRewriteRuleRHS name="BNumDigitsLtNInternal rhs" org.eventb.core.label="BNumDigitsLtNInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BaseNNums/BaseNOrderedSets.tuf|org.eventb.theory.core.theoryRoot#BaseNOrderedSets|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.formula="COND(x=(nil ⦂ List(pNat)),nil ⦂ List(pNat),cons(BNumLSDInternal(x),BNumDigitsLtNInternal(BNumShiftLeftInternal(x),ns)))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
