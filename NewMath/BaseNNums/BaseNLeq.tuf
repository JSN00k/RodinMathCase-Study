<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.newOperatorDefinition name="'" org.eventb.core.label="BNumLeqMinus" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="INFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="(BNumList(x) = BNumList(y) ∧ BNumBase(x) pLeq BNumBase(y))&#10;  ∨ (BNumList(x) ≠ BNumList(y) ∧ x BNumMinus y = nil ↦ BNumBase(x))"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="BNum" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="BNum" org.eventb.core.identifier="y"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.importTheoryProject name="(" org.eventb.theory.core.importTheoryProject="/BaseNNums">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/BaseNNums/BaseNMinus.dtf|org.eventb.theory.core.deployedTheoryRoot#BaseNMinus"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name=")" org.eventb.core.label="BNumLeqRevInternal" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="List(pNat)" org.eventb.core.identifier="xL"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="List(pNat)" org.eventb.core.identifier="yL"/>
<org.eventb.theory.core.recursiveOperatorDefinition name=")" org.eventb.theory.core.inductiveArgument="xL">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="nil" org.eventb.theory.core.formula="⊤"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="cons(xH, xT)" org.eventb.theory.core.formula="xH pLt BNumLSDInternal(yL) ∨ (xH = BNumLSDInternal(yL) ∧ BNumLeqRevInternal(xT, BNumShiftLeftInternal(yL)))"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="BNumLeq" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="INFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="BNum" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="BNum" org.eventb.core.identifier="y"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="(BNumList(x) = BNumList(y) ∧ BNumBase(x) pLeq BNumBase(y))&#10;  ∨ length(BNumList(x)) pLt length(BNumList(y)) &#10;  ∨ (length(BNumList(x)) = length(BNumList(y)) ∧ BNumList(x) ≠ BNumList(y) ∧ BNumLeqRevInternal(reverse(BNumList(x)), reverse(BNumList(y))))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="," org.eventb.core.label="x LeqInternal x" org.eventb.core.predicate="∀x· BNumLeqRevInternal(x, x) "/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="LeqInternalCancellation" org.eventb.core.predicate="∀x, xH1, xH2·BNumLeqRevInternal(append(x, xH1), append(x, xH2)) ⇔ xH1 pLeq xH2"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="LeqInternal Cancell Appended" org.eventb.core.predicate="∀x·∀y, xH, yH· length(x) = length(y) ∧ x ≠ y ⇒ (BNumLeqRevInternal(x, y) ⇔ BNumLeqRevInternal(append(x, xH), append(y, yH)))"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="Not Equ Append not difference right" org.eventb.core.predicate="∀x·∀y, yH·length(x) = length(y) ∧ x ≠ y ⇒ (BNumLeqRevInternal(x, y) ⇔ BNumLeqRevInternal(x, append(y, yH)))"/>
<org.eventb.theory.core.theorem name="7" org.eventb.core.label="longer nums are normally bigger" org.eventb.core.predicate="∀x, xH· xH ≠ zero ⇒ ¬BNumLeqRevInternal(append(x,xH), x)"/>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="Leqs Equiv Cororally" org.eventb.core.predicate="∀y·∀x, B· BaseNIsNormalInternal(x) ∧ BaseNIsNormalInternal(y) ∧ two pLeq B ∧ length(x) = length(y)&#10;  ∧ BaseNMinusInternal(x, y, B) = nil ⇒ BNumLeqRevInternal(reverse(x),reverse(y))"/>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="Leqs are equivalent" org.eventb.core.predicate="∀x, y· x ∈ BNumNorm ∧ y ∈ BNumNorm ⇒ (x BNumLeq y ⇔ x BNumLeqMinus y)"/>
<org.eventb.theory.core.theorem name="8" org.eventb.core.label="not x leq y =&gt; x /= y" org.eventb.core.predicate="∀x, y·x ∈ BNumNorm ∧ y ∈ BNumNorm ∧ ¬(x BNumLeq y) ⇒ x ≠ y"/>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="Antisymetry" org.eventb.core.predicate="BNumLeqB_P ∈ AntiSymmetry(BNumNorm)"/>
<org.eventb.theory.core.theorem name="5" org.eventb.core.label="Transitivity" org.eventb.core.predicate="BNumLeqB_P ∈ Transitivity(BNumNorm)"/>
<org.eventb.theory.core.theorem name="6" org.eventb.core.label="Totallity" org.eventb.core.predicate="BNumLeqB_P ∈ Totality(BNumNorm)"/>
<org.eventb.theory.core.theorem name="3" org.eventb.core.label="BNumLeqB_P in leq(BNumNorm)" org.eventb.core.predicate="BNumLeqB_P ∈ leq(BNumNorm)"/>
<org.eventb.theory.core.newOperatorDefinition name="1" org.eventb.core.label="BNumLeqB" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="INFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="bool(xB BNumLeq yB)"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="BNum" org.eventb.core.identifier="xB"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="BNum" org.eventb.core.identifier="yB"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="2" org.eventb.core.label="BNumLeqB_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="λc ↦ d·c ∈ BNumNorm ∧ d ∈ BNumNorm ∣ c BNumLeqB d"/>
</org.eventb.theory.core.newOperatorDefinition>
</org.eventb.theory.core.theoryRoot>
