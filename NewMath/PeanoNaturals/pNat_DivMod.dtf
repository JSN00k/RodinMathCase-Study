<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="33232844a2c6df1879ba0196faa1572b" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="pNat_Times" org.eventb.core.scTarget="/PeanoNaturals/pNat_Times.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat_Times"/>
<org.eventb.theory.core.useTheory name="pNat_Minus" org.eventb.core.scTarget="/PeanoNaturals/pNat_Minus.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat_Minus"/>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="pDivModInternal" org.eventb.core.predicate="d≠(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat×pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="d" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="c" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="n">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="c ↦ (zero ⦂ pNat)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(ns)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(suc(ns)=d,suc(c) ↦ (zero ⦂ pNat),COND(suc(ns) pMinus d=(zero ⦂ pNat),c ↦ suc(ns),pDivModInternal(suc(ns) pMinus d,d,suc(c))))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="pDivMod" org.eventb.core.predicate="d≠(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="pNat×pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scOperatorArgument name="d" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="pDivModInternal(n,d,zero ⦂ pNat)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="x &lt; y x / y = zero |-&gt; x" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·x pLt y⇒x pDivMod y=(zero ⦂ pNat) ↦ x" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="x &lt; y internal" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat,c⦂pNat·x pLt y⇒pDivModInternal(x,y,c)=c ↦ x" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#0" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="x / x = one |-&gt; zero" org.eventb.core.predicate="∀x⦂pNat·x≠(zero ⦂ pNat)⇒x pDivMod x=(one ⦂ pNat) ↦ (zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="addition rule" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·y pLt x⇒(x pAdd y) pDivMod x=(one ⦂ pNat) ↦ y" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="inverse of times" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·∀c⦂pNat·y≠(zero ⦂ pNat)⇒pDivModInternal(x pTimes y,y,c)=c pAdd x ↦ (zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#*" org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="inverse of times complete" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat,z⦂pNat·∀c⦂pNat·y≠(zero ⦂ pNat)∧z pLt y⇒pDivModInternal((x pTimes y) pAdd z,y,c)=c pAdd x ↦ z" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#2" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="remainder is less than dividor" org.eventb.core.predicate="∀y⦂pNat·∀x⦂pNat·y≠(zero ⦂ pNat)⇒(prj2 ⦂ ℙ(pNat×pNat×pNat))(x pDivMod y) pLt y" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="6"/>
<org.eventb.theory.core.scTheorem name="generatedBlocs" org.eventb.core.label="dividor arithmetic" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·∀c⦂pNat·y≠(zero ⦂ pNat)⇒suc((prj1 ⦂ ℙ(pNat×pNat×pNat))(pDivModInternal(x,y,c)))=(prj1 ⦂ ℙ(pNat×pNat×pNat))(pDivModInternal(x,y,suc(c)))∧(prj2 ⦂ ℙ(pNat×pNat×pNat))(pDivModInternal(x,y,c))=(prj2 ⦂ ℙ(pNat×pNat×pNat))(pDivModInternal(x,y,suc(c)))" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#1" org.eventb.theory.core.order="7"/>
<org.eventb.theory.core.scTheorem name="generatedBloct" org.eventb.core.label="Div in Addition" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat,z⦂pNat·z≠(zero ⦂ pNat)⇒(x pAdd y) pDivMod z=(prj1 ⦂ ℙ(pNat×pNat×pNat))(x pDivMod z) pAdd (prj1 ⦂ ℙ(pNat×pNat×pNat))(y pDivMod z) pAdd (prj1 ⦂ ℙ(pNat×pNat×pNat))(((prj2 ⦂ ℙ(pNat×pNat×pNat))(x pDivMod z) pAdd (prj2 ⦂ ℙ(pNat×pNat×pNat))(y pDivMod z)) pDivMod z) ↦ (prj2 ⦂ ℙ(pNat×pNat×pNat))(((prj2 ⦂ ℙ(pNat×pNat×pNat))(x pDivMod z) pAdd (prj2 ⦂ ℙ(pNat×pNat×pNat))(y pDivMod z)) pDivMod z)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="8"/>
<org.eventb.theory.core.scTheorem name="generatedBlocu" org.eventb.core.label="(x * y + x) / x = suc(y)" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·x≠(zero ⦂ pNat)⇒((x pTimes y) pAdd x) pDivMod x=suc(y) ↦ (zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.theorem#4" org.eventb.theory.core.order="9"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="n" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="d" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="c" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="ns" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="pNat_DivMod.pDivModInternal case 0" org.eventb.core.accurate="true" org.eventb.core.label="pNat_DivMod.pDivModInternal case 0" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pDivModInternal expansion" org.eventb.theory.core.formula="pDivModInternal(zero ⦂ pNat,d,c)">
<org.eventb.theory.core.scRewriteRuleRHS name="pDivModInternal rhs" org.eventb.core.label="pDivModInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="c ↦ (zero ⦂ pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat_DivMod.pDivModInternal case 1" org.eventb.core.accurate="true" org.eventb.core.label="pNat_DivMod.pDivModInternal case 1" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pDivModInternal expansion" org.eventb.theory.core.formula="pDivModInternal(suc(ns),d,c)">
<org.eventb.theory.core.scRewriteRuleRHS name="pDivModInternal rhs" org.eventb.core.label="pDivModInternal rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="COND(suc(ns)=d,suc(c) ↦ (zero ⦂ pNat),COND(suc(ns) pMinus d=(zero ⦂ pNat),c ↦ suc(ns),pDivModInternal(suc(ns) pMinus d,d,suc(c))))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat_DivMod.pDivMod" org.eventb.core.accurate="true" org.eventb.core.label="pNat_DivMod.pDivMod" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pDivMod expansion" org.eventb.theory.core.formula="n pDivMod d">
<org.eventb.theory.core.scRewriteRuleRHS name="pDivMod rhs" org.eventb.core.label="pDivMod rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="pDivModInternal(n,d,zero ⦂ pNat)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocv" org.eventb.core.label="rulesBlock1" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.metaVariable#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="z" org.eventb.core.accurate="true" org.eventb.core.label="rew1" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.rewriteRule#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="x / x = one" org.eventb.theory.core.formula="x pDivMod x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="x≠(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.rewriteRule#(|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="(one ⦂ pNat) ↦ (zero ⦂ pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="{" org.eventb.core.accurate="true" org.eventb.core.label="rew2" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.rewriteRule#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="(x * y) / x = y" org.eventb.theory.core.formula="(x pTimes y) pDivMod x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="x≠(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.rewriteRule#*|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="y ↦ (zero ⦂ pNat)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="|" org.eventb.core.accurate="true" org.eventb.core.label="rew3" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.rewriteRule#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="(y * x) / x = y" org.eventb.theory.core.formula="(y pTimes x) pDivMod x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="x≠(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_DivMod.tuf|org.eventb.theory.core.theoryRoot#pNat_DivMod|org.eventb.theory.core.proofRulesBlock#3|org.eventb.theory.core.rewriteRule#+|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="y ↦ (zero ⦂ pNat)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
