<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="d96df00b0d6f73ae796e682140d5c3ce" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="pNat_T" org.eventb.core.scTarget="/PeanoNaturals/pNat_T.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat_T"/>
<org.eventb.theory.core.useTheory name="Ordering" org.eventb.core.scTarget="/PeanoNaturals/Ordering.dtf|org.eventb.theory.core.deployedTheoryRoot#Ordering"/>
<org.eventb.theory.core.scNewOperatorDefinition name="(" org.eventb.core.label="pDecrement" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="pNat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ pNat" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="zero ⦂ pNat"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(xs)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="xs"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="Decrement decrements" org.eventb.core.predicate="∀x⦂pNat·x≠(zero ⦂ pNat)⇒pDecrement(x) pLeq x" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#)" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="Only Zero doesn't decrement" org.eventb.core.predicate="∀x⦂pNat·pDecrement(x)=x⇔x=(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#*" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="x &lt;= y =&gt; decr(x) &lt;= y" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·x pLeq y⇒pDecrement(x) pLeq y" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="Decr(x) = zero &lt;=&gt; x = one or x = zero" org.eventb.core.predicate="∀x⦂pNat·pDecrement(x)=(zero ⦂ pNat)⇔x=(zero ⦂ pNat)∨x=(one ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="x = decr(y) &lt;=&gt; suc(x) = y" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·y≠(zero ⦂ pNat)⇒(x=pDecrement(y)⇔suc(x)=y)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="suc(x) = y =&gt; x = decr(y)" org.eventb.core.predicate="∀x⦂pNat,y⦂pNat·suc(x)=y⇒x=pDecrement(y)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#0" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="suc(decr(x)) = x" org.eventb.core.predicate="∀x⦂pNat·x≠(zero ⦂ pNat)⇒suc(pDecrement(x))=x" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="6"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="pNat_Decrement.pDecrement case 0" org.eventb.core.accurate="true" org.eventb.core.label="pNat_Decrement.pDecrement case 0" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pDecrement expansion" org.eventb.theory.core.formula="pDecrement(zero ⦂ pNat)">
<org.eventb.theory.core.scRewriteRuleRHS name="pDecrement rhs" org.eventb.core.label="pDecrement rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.formula="zero ⦂ pNat"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="pNat_Decrement.pDecrement case 1" org.eventb.core.accurate="true" org.eventb.core.label="pNat_Decrement.pDecrement case 1" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="pDecrement expansion" org.eventb.theory.core.formula="pDecrement(suc(xs))">
<org.eventb.theory.core.scRewriteRuleRHS name="pDecrement rhs" org.eventb.core.label="pDecrement rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.formula="xs"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlocs" org.eventb.core.label="rulesBlock1" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.metaVariable#(" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.metaVariable#)" org.eventb.core.type="pNat"/>
<org.eventb.theory.core.scRewriteRule name="z" org.eventb.core.accurate="true" org.eventb.core.label="rew1" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="suc(x) = y" org.eventb.theory.core.formula="x=pDecrement(y)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="y≠(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#-|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="suc(x)=y"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="{" org.eventb.core.accurate="true" org.eventb.core.label="rew2" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#." org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="cancel Decr(suc(x))" org.eventb.theory.core.formula="pDecrement(suc(x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.rewriteRule#.|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="x"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scInferenceRule name="|" org.eventb.core.accurate="true" org.eventb.core.label="inf1" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="x &lt;= y =&gt; decr(x) &lt;= y" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="pDecrement(x) pLeq y" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#'|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x pLeq y" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#'|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="}" org.eventb.core.accurate="true" org.eventb.core.label="inf2" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="x &lt;= y =&gt; decr(x) &lt;= y" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="pDecrement(x) pLeq y" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="x pLeq y" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#*|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="true"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="~" org.eventb.core.accurate="true" org.eventb.core.label="inf3" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="Decr(x) = 0 =&gt; x = 0 or x = 1" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="x=(zero ⦂ pNat)∨x=(one ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="pDecrement(x)=(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#+|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="false"/>
</org.eventb.theory.core.scInferenceRule>
<org.eventb.theory.core.scInferenceRule name="''" org.eventb.core.accurate="true" org.eventb.core.label="inf4" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="Decr(x) = 0 =&gt; x = 0 or x = 1" org.eventb.theory.core.reasoningType="both">
<org.eventb.theory.core.scInfer name="(" org.eventb.core.predicate="x=(zero ⦂ pNat)∨x=(one ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#,|org.eventb.theory.core.infer#("/>
<org.eventb.theory.core.scGiven name="'" org.eventb.core.predicate="pDecrement(x)=(zero ⦂ pNat)" org.eventb.core.source="/PeanoNaturals/pNat_Decrement.tuf|org.eventb.theory.core.theoryRoot#pNat_Decrement|org.eventb.theory.core.proofRulesBlock#,|org.eventb.theory.core.inferenceRule#,|org.eventb.theory.core.given#'" org.eventb.theory.core.hyp="true"/>
</org.eventb.theory.core.scInferenceRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
