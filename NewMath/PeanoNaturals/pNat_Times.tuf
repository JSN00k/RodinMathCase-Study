<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="pNatMult" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="pNat" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="pNat" org.eventb.core.identifier="y"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="Power(zero, pAdd_P, x, y)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name=")" org.eventb.core.label="pNatMult_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="λx ↦ y· ⊤ ∣ pNatMult(x, y)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="+" org.eventb.core.comment="All The proofs using the pNatMult operator are used to show that NatPow is associative&#10;and commutative before creating the pTimes rule to avoid the soundness &#10;problem." org.eventb.core.label="Zero Mult" org.eventb.core.predicate="∀x·pNatMult(zero, x) = zero"/>
<org.eventb.theory.core.theorem name="," org.eventb.core.label="Mult Zero" org.eventb.core.predicate="∀x·pNatMult(x, zero) = zero"/>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="Mult suc(x) ∗ y = y + x ∗ y" org.eventb.core.predicate="∀x, y·pNatMult(suc(x), y) = y pAdd pNatMult(x, y)"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="Mult Distrib (x + y) ∗ z" org.eventb.core.predicate="∀x, y, z·pNatMult(x pAdd y, z) = pNatMult(x, z) pAdd pNatMult(y, z)"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="Mult Distrib x ∗ (y + z)" org.eventb.core.predicate="∀x, y, z·pNatMult(x, y pAdd z) = pNatMult(x, y) pAdd pNatMult(x, z)"/>
<org.eventb.theory.core.theorem name="*" org.eventb.core.label="Mult Associative" org.eventb.core.predicate="pNatMult_P ∈ AssocOp(pNat)"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.comment="This is the last theorem for which we need to use natPow to &#10;avoid the soundness bug." org.eventb.core.label="Mult Commutative" org.eventb.core.predicate="pNatMult_P ∈ CommOp(pNat)"/>
<org.eventb.theory.core.newOperatorDefinition name="1" org.eventb.core.label="pTimes" org.eventb.theory.core.associative="true" org.eventb.theory.core.commutative="true" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="INFIX">
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="pNat" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="pNat" org.eventb.core.identifier="y"/>
<org.eventb.theory.core.directOperatorDefinition name="*" org.eventb.theory.core.formula="Power(zero, pAdd_P, x, y)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="2" org.eventb.core.label="pTimes_P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.directOperatorDefinition name="'" org.eventb.theory.core.formula="λx ↦ y·⊤ ∣ x pTimes y"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="natMult_P = Times_P" org.eventb.core.predicate="pNatMult_P = pTimes_P"/>
<org.eventb.theory.core.theorem name="5" org.eventb.core.label="natMult(x, y) = x pTimes y" org.eventb.core.predicate="∀x, y·pNatMult(x, y) = x pTimes y"/>
<org.eventb.theory.core.theorem name="=" org.eventb.core.label="x * y = zero =&gt; x = zero | y = zero" org.eventb.core.predicate="∀x, y· x pTimes y = zero ⇔ x = zero ∨ y = zero"/>
<org.eventb.theory.core.theorem name="A" org.eventb.core.label="one is identitiy" org.eventb.core.predicate="∀x· x pTimes one = x"/>
<org.eventb.theory.core.theorem name=":" org.eventb.core.label="Cancelling with division" org.eventb.core.predicate="∀x, y, z·z ≠ zero ⇒ (x pTimes z = y pTimes z ⇔ x = y)"/>
<org.eventb.theory.core.proofRulesBlock name="9" org.eventb.core.label="Simplifications">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.rewriteRule name="(" org.eventb.core.label="Times zero" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * 0 = 0" org.eventb.theory.core.formula="x pTimes zero">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="zero"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name=")" org.eventb.core.label="zero Times" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="0 * x" org.eventb.theory.core.formula="zero pTimes x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="zero"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="Times One" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * 1" org.eventb.theory.core.formula="x pTimes one">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="One Times" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="1 * x" org.eventb.theory.core.formula="one pTimes x">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label=" = zero implication" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * y = 0 =&gt; x = 0 or y = 0" org.eventb.theory.core.formula="x pTimes y = zero">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x = zero ∨ y = zero"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.metaVariable name="-" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name="G" org.eventb.core.label="type rewrites">
<org.eventb.theory.core.rewriteRule name="'" org.eventb.core.label="times is associative" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="times is associative" org.eventb.theory.core.formula="pTimes_P ∈ AssocOp(pNat)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="(" org.eventb.core.label="times is commutative" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="times is commutative" org.eventb.theory.core.formula="pTimes_P ∈ CommOp(pNat)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name=")" org.eventb.core.label="one |-&gt; times is monoid" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Describe Me!" org.eventb.theory.core.formula="one ↦ pTimes_P ∈ Monoid(pNat)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤ "/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name="3" org.eventb.core.label="Abelian rewrites">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="z" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="bracket right" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Bracket right" org.eventb.theory.core.formula="x pTimes y pTimes z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x pTimes (y pTimes z)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="bracket left" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Bracket left" org.eventb.theory.core.formula="x pTimes y pTimes z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pTimes y) pTimes z"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="Comm Swap" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Comm Swap" org.eventb.theory.core.formula="x pTimes y">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="y pTimes x"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name="6" org.eventb.core.label="suc expansions">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.rewriteRule name=")" org.eventb.core.label="(1 + x) ∗ y" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="(1 + x) * y  expansion" org.eventb.theory.core.formula="suc(x) pTimes y">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="y pAdd (x pTimes y)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="x ∗ (1 + y)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * (1 + y) expansion" org.eventb.theory.core.formula="x pTimes suc(y)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="x ∗ (1 + y)" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x pAdd (x pTimes y)"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name="7" org.eventb.core.label="Distributive">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="z" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="distrib1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * (y + z) dsitrib" org.eventb.theory.core.formula="x pTimes (y pAdd z)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pTimes y) pAdd (x pTimes z)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="distrib2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="(x + y) * z distib" org.eventb.theory.core.formula="(x pAdd y) pTimes z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pTimes z) pAdd (y pTimes z)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="distrib Minus " org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="(x - y) * z distrib" org.eventb.theory.core.formula="(x pMinus y) pTimes z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pTimes z) pMinus (y pTimes z)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="-" org.eventb.core.label="distrib Minus2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="z * (x - y) distrib" org.eventb.theory.core.formula="z pTimes (x pMinus y)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pTimes z) pMinus (y pTimes z)"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.proofRulesBlock name="8" org.eventb.core.label="Factorization">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="z" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="Factor1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * y + x * z factorize" org.eventb.theory.core.formula="(x pTimes y) pAdd (x pTimes z) ">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x pTimes (y pAdd z)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="+" org.eventb.core.label="Factor2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * y + z * y facorize" org.eventb.theory.core.formula="(x pTimes y) pAdd (z pTimes y)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pAdd z) pTimes y"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="FactorOne" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x + x * y factorize" org.eventb.theory.core.formula="x pAdd (x pTimes y)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x pTimes (one pAdd y)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="-" org.eventb.core.label="FactorOne2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x * y + y factorize" org.eventb.theory.core.formula="(x pTimes y) pAdd y">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="(x pAdd one) pTimes y"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.importTheoryProject name=";" org.eventb.theory.core.importTheoryProject="/PeanoNaturals">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/PeanoNaturals/Ordering.dtf|org.eventb.theory.core.deployedTheoryRoot#Ordering"/>
<org.eventb.theory.core.importTheory name="(" org.eventb.theory.core.importTheory="/PeanoNaturals/pNat_Minus.dtf|org.eventb.theory.core.deployedTheoryRoot#pNat_Minus"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.proofRulesBlock name="&gt;" org.eventb.core.label="Cancellation and Zero">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="x" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name="(" org.eventb.core.identifier="y" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="z" org.eventb.theory.core.type="pNat"/>
<org.eventb.theory.core.inferenceRule name="*" org.eventb.core.label="z not zero cancel" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="z /= zero =&gt; x pTimes z = y pTimes z ⇔ x = y">
<org.eventb.theory.core.given name="'" org.eventb.core.predicate="z ≠ zero" org.eventb.theory.core.hyp="false"/>
<org.eventb.theory.core.infer name="(" org.eventb.core.predicate="x pTimes z = y pTimes z ⇔ x = y"/>
</org.eventb.theory.core.inferenceRule>
<org.eventb.theory.core.inferenceRule name="+" org.eventb.core.label="z not zero cancel2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.desc="z /= zero =&gt; x pTimes z = y pTimes z ⇔ x = y">
<org.eventb.theory.core.given name="'" org.eventb.core.predicate="z ≠ zero" org.eventb.theory.core.hyp="true"/>
<org.eventb.theory.core.infer name="(" org.eventb.core.predicate="x pTimes z = y pTimes z ⇔ x = y"/>
</org.eventb.theory.core.inferenceRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="x pTimes y = zero =&gt; x = zero or y = zero" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x pTimes y = zero =&gt; x = zero or y = zero" org.eventb.theory.core.formula="x pTimes y = zero">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="x = zero ∨ y = zero"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="-" org.eventb.core.label="cancel through division" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="cancel z x * z = y * z" org.eventb.theory.core.formula="x pTimes z = y pTimes z">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="z ≠ zero" org.eventb.theory.core.formula="x = y"/>
</org.eventb.theory.core.rewriteRule>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.theorem name="?" org.eventb.core.label="One is the identity" org.eventb.core.predicate="∀x, y·y ≠ zero ⇒ (x pTimes y = y ⇔ x = one)"/>
<org.eventb.theory.core.theorem name="@" org.eventb.core.label="x * y = y if y is zero" org.eventb.core.predicate="∀x, y·x pTimes y = y ⇔ x = one ∨ y = zero"/>
<org.eventb.theory.core.theorem name="C" org.eventb.core.label="x in terms of y" org.eventb.core.predicate="∀x, y·x ≠ zero ⇒ (∃n, r·(x pTimes n) pAdd r = y ∧ r pLt x)"/>
<org.eventb.theory.core.importTheoryProject name="B" org.eventb.theory.core.importTheoryProject="/Monoid">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/Monoid/Monoid_Power.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid_Power"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.theorem name="E" org.eventb.core.label="x in terms of y unique" org.eventb.core.predicate="∀x, r1, r2, n1, n2·x ≠ zero ∧ r1 pLt x ∧ r2 pLt x ∧ (x pTimes n1) pAdd r1 = (x pTimes n2) pAdd r2 ⇒ n1 = n2 ∧ r1 = r2"/>
<org.eventb.theory.core.theorem name="F" org.eventb.core.label="x in terms of y unique2" org.eventb.core.predicate="∀x, r1, r2, n1, n2·x ≠ zero ∧ r1 pLt x ∧ r2 pLt x ⇒ ((x pTimes n1) pAdd r1 = (x pTimes n2) pAdd r2 ⇔ n1 = n2 ∧ r1 = r2)"/>
<org.eventb.theory.core.theorem name="H" org.eventb.core.label="Distributes accross minus" org.eventb.core.predicate="∀x, y, z·(x pMinus y) pTimes z = (x pTimes z) pMinus (y pTimes z)"/>
<org.eventb.theory.core.theorem name="I" org.eventb.core.label="times maintains ordering" org.eventb.core.predicate="∀x, y, a· a≠ zero ⇒ (a pTimes x pLeq a pTimes y ⇔ x pLeq y)"/>
<org.eventb.theory.core.theorem name="K" org.eventb.core.label="times maintains ordering Lt" org.eventb.core.predicate="∀x, y, a· a≠ zero ⇒ (a pTimes x pLt a pTimes y ⇔ x pLt y)"/>
<org.eventb.theory.core.theorem name="J" org.eventb.core.label="times increases (ordering)" org.eventb.core.predicate="∀x, a·a ≠ zero ⇒ x pLeq x pTimes a"/>
</org.eventb.theory.core.theoryRoot>
