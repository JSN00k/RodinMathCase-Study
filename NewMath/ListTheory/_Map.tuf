<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/ListTheory">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/ListTheory/_SubtypeLists.dtf|org.eventb.theory.core.deployedTheoryRoot#_SubtypeLists"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.newOperatorDefinition name="(" org.eventb.core.label="map" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="S ⇸ T" org.eventb.core.identifier="f"/>
<org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="nil" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
<org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="cons(x0, xs)" org.eventb.theory.core.formula="cons(f(x0), map(f, xs))"/>
</org.eventb.theory.core.recursiveOperatorDefinition>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="List(S)" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorWDcondition name="*" org.eventb.core.predicate="elements(x) ⊆ dom(f)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="S"/>
<org.eventb.theory.core.typeParameter name="*" org.eventb.core.identifier="T"/>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="map_type_thm" org.eventb.core.predicate="∀a, b, f, x ·&#10;  a ⊆ S ∧&#10;  b ⊆ T ∧&#10;  f ∈ a → b ∧&#10;  x ∈ List(a)&#10;  ⇒ map(f, x) ∈ List(b)"/>
</org.eventb.theory.core.theoryRoot>
