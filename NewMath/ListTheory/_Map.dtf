<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="c555f1e04cffc0fe212c979feeffe4d3" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="_SubtypeLists" org.eventb.core.scTarget="/ListTheory/_SubtypeLists.dtf|org.eventb.theory.core.deployedTheoryRoot#_SubtypeLists"/>
<org.eventb.theory.core.scTypeParameter name="S" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(S)"/>
<org.eventb.theory.core.scTypeParameter name="T" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.typeParameter#*" org.eventb.core.type="ℙ(T)"/>
<org.eventb.theory.core.scNewOperatorDefinition name="U" org.eventb.core.label="map" org.eventb.core.predicate="f∈S ⇸ T∧elements(x)⊆dom(f)" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(T)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×T)"/>
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="List(S)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(S)" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(x0,xs)" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(f(x0),map(f,xs))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="map_type_thm" org.eventb.core.predicate="∀a⦂ℙ(S),b⦂ℙ(T),f⦂ℙ(S×T),x⦂List(S)·a⊆S∧b⊆T∧f∈a → b∧x∈List(a)⇒map(f,x)∈List(b)" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="f" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="ℙ(S×T)"/>
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(S)"/>
<org.eventb.theory.core.scMetavariable name="x0" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="S"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(S)"/>
<org.eventb.theory.core.scRewriteRule name="_Map.map case 0" org.eventb.core.accurate="true" org.eventb.core.label="_Map.map case 0" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="map expansion" org.eventb.theory.core.formula="map(f,nil ⦂ List(S))">
<org.eventb.theory.core.scRewriteRuleRHS name="map rhs" org.eventb.core.label="map rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="nil ⦂ List(T)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="_Map.map case 1" org.eventb.core.accurate="true" org.eventb.core.label="_Map.map case 1" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="map expansion" org.eventb.theory.core.formula="map(f,cons(x0,xs))">
<org.eventb.theory.core.scRewriteRuleRHS name="map rhs" org.eventb.core.label="map rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/ListTheory/_Map.tuf|org.eventb.theory.core.theoryRoot#_Map|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="cons(f(x0),map(f,xs))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
