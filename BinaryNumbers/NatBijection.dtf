<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="6f9e1de89905b874a5596d68aa48e289" org.eventb.theory.core.outdated="true">
<org.eventb.theory.core.useTheory name="IncrementNaturals" org.eventb.core.scTarget="/BinaryNumbers/IncrementNaturals.dtf|org.eventb.theory.core.deployedTheoryRoot#IncrementNaturals"/>
<org.eventb.theory.core.useTheory name="NaturalsMultiply" org.eventb.core.scTarget="/Maths/NaturalsMultiply.dtf|org.eventb.theory.core.deployedTheoryRoot#NaturalsMultiply"/>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="bn_toNat" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Nat" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="zero ⦂ Nat"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(xB,xs)" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(xB=TRUE,one ⦂ Nat,zero ⦂ Nat) nAdd (suc(suc(zero ⦂ Nat)) nTimes bn_toNat(xs))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="bn_toBin" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Nat"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="zero ⦂ Nat" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="suc(xs)" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="bn_increment(bn_toBin(xs))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="increment to suc" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_toNat(bn_increment(x))=suc(bn_toNat(x))" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="bijection" org.eventb.core.predicate="∀x⦂Nat·bn_toNat(bn_toBin(x))=x" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.theorem#+" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="xB" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="a_" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="Nat"/>
<org.eventb.theory.core.scMetavariable name="xs_" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="Nat"/>
<org.eventb.theory.core.scRewriteRule name="NatBijection.bn_toNat case 0" org.eventb.core.accurate="true" org.eventb.core.label="NatBijection.bn_toNat case 0" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_toNat expansion" org.eventb.theory.core.formula="bn_toNat(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_toNat rhs" org.eventb.core.label="bn_toNat rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="zero ⦂ Nat"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="NatBijection.bn_toNat case 1" org.eventb.core.accurate="true" org.eventb.core.label="NatBijection.bn_toNat case 1" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_toNat expansion" org.eventb.theory.core.formula="bn_toNat(cons(xB,xs))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_toNat rhs" org.eventb.core.label="bn_toNat rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="COND(xB=TRUE,one ⦂ Nat,zero ⦂ Nat) nAdd (suc(suc(zero ⦂ Nat)) nTimes bn_toNat(xs))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="NatBijection.bn_toBin case 0" org.eventb.core.accurate="true" org.eventb.core.label="NatBijection.bn_toBin case 0" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_toBin expansion" org.eventb.theory.core.formula="bn_toBin(zero ⦂ Nat)">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_toBin rhs" org.eventb.core.label="bn_toBin rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="NatBijection.bn_toBin case 1" org.eventb.core.accurate="true" org.eventb.core.label="NatBijection.bn_toBin case 1" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_toBin expansion" org.eventb.theory.core.formula="bn_toBin(suc(xs_))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_toBin rhs" org.eventb.core.label="bn_toBin rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/NatBijection.tuf|org.eventb.theory.core.theoryRoot#NatBijection|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="bn_increment(bn_toBin(xs_))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
