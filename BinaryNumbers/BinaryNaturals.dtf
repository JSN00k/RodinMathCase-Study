<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="4f1f76e26ec37c01a06052d85a1f9c54" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="NaturalsMultiply" org.eventb.core.scTarget="/Maths/NaturalsMultiply.dtf|org.eventb.theory.core.deployedTheoryRoot#NaturalsMultiply"/>
<org.eventb.theory.core.useTheory name="BOOL" org.eventb.core.scTarget="/BOOL/BOOL.dtf|org.eventb.theory.core.deployedTheoryRoot#BOOL"/>
<org.eventb.theory.core.useTheory name="BitwiseOps" org.eventb.core.scTarget="/BinaryNumbers/BitwiseOps.dtf|org.eventb.theory.core.deployedTheoryRoot#BitwiseOps"/>
<org.eventb.theory.core.useTheory name="BinaryEquality" org.eventb.core.scTarget="/BinaryNumbers/BinaryEquality.dtf|org.eventb.theory.core.deployedTheoryRoot#BinaryEquality"/>
<org.eventb.theory.core.useTheory name="IncrementNaturals" org.eventb.core.scTarget="/BinaryNumbers/IncrementNaturals.dtf|org.eventb.theory.core.deployedTheoryRoot#IncrementNaturals"/>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="bn_Add" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="+" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.recursiveOperatorDefinition#+" org.eventb.theory.core.inductiveArgument="x">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="y"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(xB,xs)" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(xB=TRUE∧bn_LSB(y)=TRUE,cons(FALSE,bn_increment(xs bn_Add bn_shiftLeft1(y))),COND(¬xB=TRUE∧¬bn_LSB(y)=TRUE,cons(FALSE,xs bn_Add bn_shiftLeft1(y)),cons(TRUE,xs bn_Add bn_shiftLeft1(y))))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="x bn_Add nil = x" org.eventb.core.predicate="∀x⦂List(BOOL)·x bn_Add (nil ⦂ List(BOOL))=x" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#v" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="ReverseExpand" org.eventb.core.predicate="∀x⦂List(BOOL),yB⦂BOOL,yT⦂List(BOOL)·x bn_Add cons(yB,yT)=COND(yB=TRUE∧bn_LSB(x)=TRUE,cons(FALSE,bn_increment(bn_shiftLeft1(x) bn_Add yT)),COND(¬yB=TRUE∧¬bn_LSB(x)=TRUE,cons(FALSE,bn_shiftLeft1(x) bn_Add yT),cons(TRUE,bn_shiftLeft1(x) bn_Add yT)))" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#x" org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="nil add nil = nil" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x=(nil ⦂ List(BOOL))∧y=(nil ⦂ List(BOOL))⇔x bn_Add y=(nil ⦂ List(BOOL))" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#'0" org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="expand cons" org.eventb.core.predicate="∀x⦂List(BOOL)·cons(FALSE,x) bn_Eq x bn_Add x" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#'." org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="expand Cons TRUE" org.eventb.core.predicate="∀x⦂List(BOOL)·cons(TRUE,x) bn_Eq bn_increment(x bn_Add x)" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#'\/" org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="Add maintains Normality" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·bn_isNormal(x)∧bn_isNormal(y)⇒bn_isNormal(x bn_Add y)" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#'2" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="'Eq' add xOR LSBs" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·bn_LSB(x) xOR bn_LSB(y)=bn_LSB(x bn_Add y)" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#}" org.eventb.theory.core.order="6"/>
<org.eventb.theory.core.scTheorem name="generatedBlocs" org.eventb.core.label="bn_appendList" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_concatonate(x,nil ⦂ List(BOOL))=x" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.theorem#C" org.eventb.theory.core.order="7"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="xB" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="xs" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="BinaryNaturals.bn_Add case 0" org.eventb.core.accurate="true" org.eventb.core.label="BinaryNaturals.bn_Add case 0" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_Add expansion" org.eventb.theory.core.formula="(nil ⦂ List(BOOL)) bn_Add y">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_Add rhs" org.eventb.core.label="bn_Add rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.formula="y"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BinaryNaturals.bn_Add case 1" org.eventb.core.accurate="true" org.eventb.core.label="BinaryNaturals.bn_Add case 1" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_Add expansion" org.eventb.theory.core.formula="cons(xB,xs) bn_Add y">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_Add rhs" org.eventb.core.label="bn_Add rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryNaturals.tuf|org.eventb.theory.core.theoryRoot#BinaryNaturals|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.formula="COND(xB=TRUE∧bn_LSB(y)=TRUE,cons(FALSE,bn_increment(xs bn_Add bn_shiftLeft1(y))),COND(¬xB=TRUE∧¬bn_LSB(y)=TRUE,cons(FALSE,xs bn_Add bn_shiftLeft1(y)),cons(TRUE,xs bn_Add bn_shiftLeft1(y))))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
