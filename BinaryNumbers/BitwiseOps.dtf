<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="fef57c8ba82a52d9da9ba6731d585d13" org.eventb.theory.core.outdated="true">
<org.eventb.theory.core.useTheory name="BOOL" org.eventb.core.scTarget="/BOOL/BOOL.dtf|org.eventb.theory.core.deployedTheoryRoot#BOOL"/>
<org.eventb.theory.core.useTheory name="List" org.eventb.core.scTarget="/ListTheory/List.dtf|org.eventb.theory.core.deployedTheoryRoot#List"/>
<org.eventb.theory.core.scNewOperatorDefinition name=")" org.eventb.core.label="bn_LSB" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="BOOL" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="'" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#'" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="FALSE"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(aB,as)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="aB"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="bn_shiftLeft1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(aB,as)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="as"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="+" org.eventb.core.label="bn_isZero" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(aB,as)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="aB=FALSE∧bn_isZero(as)"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="," org.eventb.core.label="bn_concatonate" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="b"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(aB,as)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="cons(aB,bn_concatonate(as,b))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="-" org.eventb.core.label="bn_remTrailingZeros" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="List(BOOL)" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="'" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.recursiveOperatorDefinition#'" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(aB,as)" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="COND(aB=TRUE∨¬bn_isZero(as),cons(aB,bn_remTrailingZeros(as)),nil ⦂ List(BOOL))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="thm1" org.eventb.core.predicate="bn_remTrailingZeros(cons(TRUE,cons(FALSE,cons(FALSE,cons(TRUE,cons(FALSE,cons(FALSE,nil ⦂ List(BOOL))))))))=cons(TRUE,cons(FALSE,cons(FALSE,cons(TRUE,nil ⦂ List(BOOL)))))" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(">
<org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="aB" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="as" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="b" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_LSB case 0" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_LSB case 0" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_LSB expansion" org.eventb.theory.core.formula="bn_LSB(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_LSB rhs" org.eventb.core.label="bn_LSB rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="FALSE"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_LSB case 1" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_LSB case 1" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_LSB expansion" org.eventb.theory.core.formula="bn_LSB(cons(aB,as))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_LSB rhs" org.eventb.core.label="bn_LSB rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.formula="aB"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_shiftLeft1 case 0" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_shiftLeft1 case 0" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_shiftLeft1 expansion" org.eventb.theory.core.formula="bn_shiftLeft1(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_shiftLeft1 rhs" org.eventb.core.label="bn_shiftLeft1 rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_shiftLeft1 case 1" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_shiftLeft1 case 1" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_shiftLeft1 expansion" org.eventb.theory.core.formula="bn_shiftLeft1(cons(aB,as))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_shiftLeft1 rhs" org.eventb.core.label="bn_shiftLeft1 rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="as"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_isZero case 0" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_isZero case 0" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_isZero expansion" org.eventb.theory.core.formula="bn_isZero(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_isZero rhs" org.eventb.core.label="bn_isZero rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_isZero case 1" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_isZero case 1" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_isZero expansion" org.eventb.theory.core.formula="bn_isZero(cons(aB,as))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_isZero rhs" org.eventb.core.label="bn_isZero rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.formula="aB=FALSE∧bn_isZero(as)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_concatonate case 0" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_concatonate case 0" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_concatonate expansion" org.eventb.theory.core.formula="bn_concatonate(nil ⦂ List(BOOL),b)">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_concatonate rhs" org.eventb.core.label="bn_concatonate rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="b"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_concatonate case 1" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_concatonate case 1" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_concatonate expansion" org.eventb.theory.core.formula="bn_concatonate(cons(aB,as),b)">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_concatonate rhs" org.eventb.core.label="bn_concatonate rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="cons(aB,bn_concatonate(as,b))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_remTrailingZeros case 0" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_remTrailingZeros case 0" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_remTrailingZeros expansion" org.eventb.theory.core.formula="bn_remTrailingZeros(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_remTrailingZeros rhs" org.eventb.core.label="bn_remTrailingZeros rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BitwiseOps.bn_remTrailingZeros case 1" org.eventb.core.accurate="true" org.eventb.core.label="BitwiseOps.bn_remTrailingZeros case 1" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_remTrailingZeros expansion" org.eventb.theory.core.formula="bn_remTrailingZeros(cons(aB,as))">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_remTrailingZeros rhs" org.eventb.core.label="bn_remTrailingZeros rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BitwiseOps.tuf|org.eventb.theory.core.theoryRoot#BitwiseOps|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.formula="COND(aB=TRUE∨¬bn_isZero(as),cons(aB,bn_remTrailingZeros(as)),nil ⦂ List(BOOL))"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
