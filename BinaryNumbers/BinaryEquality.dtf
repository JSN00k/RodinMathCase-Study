<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="6d00334bb91b007afdc87cff9ac16427" org.eventb.theory.core.outdated="false">
<org.eventb.theory.core.useTheory name="BOOL" org.eventb.core.scTarget="/BOOL/BOOL.dtf|org.eventb.theory.core.deployedTheoryRoot#BOOL"/>
<org.eventb.theory.core.useTheory name="BitwiseOps" org.eventb.core.scTarget="/BinaryNumbers/BitwiseOps.dtf|org.eventb.theory.core.deployedTheoryRoot#BitwiseOps"/>
<org.eventb.theory.core.useTheory name="_ListTheorems" org.eventb.core.scTarget="/ListTheory/_ListTheorems.dtf|org.eventb.theory.core.deployedTheoryRoot#_ListTheorems"/>
<org.eventb.theory.core.scNewOperatorDefinition name="*" org.eventb.core.label="bn_Eq_Equal_length" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRecursiveOperatorDefinition name="'" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.recursiveOperatorDefinition#'" org.eventb.theory.core.inductiveArgument="a">
<org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="nil ⦂ List(BOOL)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
<org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="cons(aB,as)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.recursiveOperatorDefinition#'|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="aB=bn_LSB(b)∧(bn_isZero(as)∨bn_Eq_Equal_length(as,bn_shiftLeft1(b)))"/>
</org.eventb.theory.core.scRecursiveOperatorDefinition>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scNewOperatorDefinition name="+" org.eventb.core.label="bn_Eq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.relOp" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.wd="(bn_countBits(a)=bn_countBits(b)∧bn_Eq_Equal_length(a,b))∨¬bn_countBits(a)=bn_countBits(b)∨¬bn_Eq_Equal_length(a,b)">
<org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="bn_countBits(a)=bn_countBits(b)∧bn_Eq_Equal_length(a,b)"/>
</org.eventb.theory.core.scNewOperatorDefinition>
<org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="bn_Eq_Equal_length(x, x) = ⊤" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_Eq_Equal_length(x,x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#U" org.eventb.theory.core.order="0"/>
<org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="equality" org.eventb.core.predicate="∀x⦂List(BOOL)·x bn_Eq x" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#," org.eventb.theory.core.order="1"/>
<org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="x−yEquality" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x=y⇒x bn_Eq y" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="2"/>
<org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="countBits(x) = 0 ⇔ x = 0" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_countBits(x)=0⇔bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#O" org.eventb.theory.core.order="3"/>
<org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="Eq nil ⇒ bn_isZero()" org.eventb.core.predicate="∀x⦂List(BOOL)·x bn_Eq (nil ⦂ List(BOOL))⇔bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#7" org.eventb.theory.core.order="4"/>
<org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="nil Eq  ⇒ bn_isZero()" org.eventb.core.predicate="∀x⦂List(BOOL)·(nil ⦂ List(BOOL)) bn_Eq x⇔bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#8" org.eventb.theory.core.order="5"/>
<org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="EqualNumbersSameBitCount" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x bn_Eq y⇒bn_countBits(x)=bn_countBits(y)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#P" org.eventb.theory.core.order="6"/>
<org.eventb.theory.core.scTheorem name="generatedBlocs" org.eventb.core.label="remZeros(zero) = nil" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_isZero(x)⇔bn_remTrailingZeros(x)=(nil ⦂ List(BOOL))" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#R" org.eventb.theory.core.order="7"/>
<org.eventb.theory.core.scTheorem name="generatedBloct" org.eventb.core.label="countBits(remZeros(x)) = countBits(x))" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_countBits(bn_remTrailingZeros(x))=bn_countBits(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#Q" org.eventb.theory.core.order="8"/>
<org.eventb.theory.core.scTheorem name="generatedBlocu" org.eventb.core.label="isZeroImpl" org.eventb.core.predicate="∀aB⦂BOOL,b⦂List(BOOL)·bn_isZero(cons(aB,b))⇔aB=FALSE∧bn_isZero(b)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#6" org.eventb.theory.core.order="9"/>
<org.eventb.theory.core.scTheorem name="generatedBlocv" org.eventb.core.label="LSB(zero) = FALSE" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_isZero(x)⇒bn_LSB(x)=FALSE" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#:" org.eventb.theory.core.order="10"/>
<org.eventb.theory.core.scTheorem name="generatedBlocw" org.eventb.core.label="EquSameLSB" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x bn_Eq y⇒bn_LSB(x)=bn_LSB(y)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#V" org.eventb.theory.core.order="11"/>
<org.eventb.theory.core.scTheorem name="generatedBlocx" org.eventb.core.label="Strip cons" org.eventb.core.predicate="∀yB⦂BOOL,zB⦂BOOL,y⦂List(BOOL),z⦂List(BOOL)·cons(yB,y) bn_Eq cons(zB,z)⇔y bn_Eq z∧yB=zB" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="12"/>
<org.eventb.theory.core.scTheorem name="generatedBlocy" org.eventb.core.label="¬(x bn_Eq y) ⇒ x ≠ y" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·¬x bn_Eq y⇒x≠y" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#T" org.eventb.theory.core.order="13"/>
<org.eventb.theory.core.scTheorem name="generatedBlocz" org.eventb.core.label="cons(⊤, x)⇒ notZero" org.eventb.core.predicate="∀x⦂List(BOOL)·¬bn_isZero(cons(TRUE,x))" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#K" org.eventb.theory.core.order="14"/>
<org.eventb.theory.core.scTheorem name="generatedBloc{" org.eventb.core.label="remZeroImpl" org.eventb.core.predicate="∀a⦂BOOL,b⦂List(BOOL)·bn_remTrailingZeros(cons(a,b))=(nil ⦂ List(BOOL))⇔a=FALSE∧bn_isZero(b)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#0" org.eventb.theory.core.order="15"/>
<org.eventb.theory.core.scTheorem name="generatedBloc|" org.eventb.core.label="remZeroImpl2" org.eventb.core.predicate="∀a⦂BOOL,b⦂List(BOOL)·bn_remTrailingZeros(cons(a,b))≠(nil ⦂ List(BOOL))⇔a=TRUE∨¬bn_isZero(b)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#2" org.eventb.theory.core.order="16"/>
<org.eventb.theory.core.scTheorem name="generatedBloc}" org.eventb.core.label="leftShift1(zero) = zero" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_isZero(x)⇒bn_isZero(bn_shiftLeft1(x))" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#;" org.eventb.theory.core.order="17"/>
<org.eventb.theory.core.scTheorem name="generatedBloc~" org.eventb.core.label="RemoveZerosPreservesEquality" org.eventb.core.predicate="∀x⦂List(BOOL)·x bn_Eq bn_remTrailingZeros(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="18"/>
<org.eventb.theory.core.scTheorem name="generatedBlod'" org.eventb.core.label="isZero(x) ⇔ isZero(remZeros(x))" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_isZero(x)⇔bn_isZero(bn_remTrailingZeros(x))" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#S" org.eventb.theory.core.order="19"/>
<org.eventb.theory.core.scTheorem name="generatedBlod(" org.eventb.core.label="remZero(cons(xB, x)) = cons(xB, x) ⇒ remZero(x) = x" org.eventb.core.predicate="∀xB⦂BOOL,x⦂List(BOOL)·bn_remTrailingZeros(cons(xB,x))=cons(xB,x)⇒bn_remTrailingZeros(x)=x" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#?" org.eventb.theory.core.order="20"/>
<org.eventb.theory.core.scTheorem name="generatedBlod)" org.eventb.core.label="bn_Eq reverse Expand" org.eventb.core.predicate="∀x⦂List(BOOL),xB⦂BOOL,xs⦂List(BOOL)·x bn_Eq cons(xB,xs)⇒bn_shiftLeft1(x) bn_Eq xs∧bn_LSB(x)=xB" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#A" org.eventb.theory.core.order="21"/>
<org.eventb.theory.core.scTheorem name="generatedBlod*" org.eventb.core.label="ConsFalseToZero" org.eventb.core.predicate="∀x⦂List(BOOL)·x bn_Eq cons(FALSE,bn_remTrailingZeros(x))⇔bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#F" org.eventb.theory.core.order="22"/>
<org.eventb.theory.core.scTheorem name="generatedBlod+" org.eventb.core.label="ConsFalseToZero2" org.eventb.core.predicate="∀x⦂List(BOOL)·cons(FALSE,bn_remTrailingZeros(x)) bn_Eq x⇔bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#J" org.eventb.theory.core.order="23"/>
<org.eventb.theory.core.scTheorem name="generatedBlod," org.eventb.core.label="cons(xB, x) = x ⇒ isZero(x)" org.eventb.core.predicate="∀x⦂List(BOOL),xB⦂BOOL·cons(xB,x) bn_Eq x⇒xB=FALSE∧bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#H" org.eventb.theory.core.order="24"/>
<org.eventb.theory.core.scTheorem name="generatedBlod-" org.eventb.core.label="x = cons(xB, x) ⇒ isZero(x)" org.eventb.core.predicate="∀x⦂List(BOOL),xB⦂BOOL·x bn_Eq cons(xB,x)⇒xB=FALSE∧bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#I" org.eventb.theory.core.order="25"/>
<org.eventb.theory.core.scTheorem name="generatedBlod." org.eventb.core.label="remZeros ≠ nil ⇒ ¬(isZero)" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_remTrailingZeros(x)≠(nil ⦂ List(BOOL))⇒¬bn_isZero(bn_remTrailingZeros(x))" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#E" org.eventb.theory.core.order="26"/>
<org.eventb.theory.core.scTheorem name="generatedBlod/" org.eventb.core.label="remZeros(remZeros(x)) = remZeros(x)" org.eventb.core.predicate="∀x⦂List(BOOL)·bn_remTrailingZeros(bn_remTrailingZeros(x))=bn_remTrailingZeros(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#D" org.eventb.theory.core.order="27"/>
<org.eventb.theory.core.scTheorem name="generatedBlod0" org.eventb.core.label="Reducebn_remTrailingZerosLeft" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·bn_remTrailingZeros(y)=y∧x bn_Eq y⇒bn_remTrailingZeros(x)=y" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#C" org.eventb.theory.core.order="28"/>
<org.eventb.theory.core.scTheorem name="generatedBlod1" org.eventb.core.label="Reduce_bn_remTrailingRightLeft" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·bn_remTrailingZeros(x)=x∧x bn_Eq y⇒x=bn_remTrailingZeros(y)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#G" org.eventb.theory.core.order="29"/>
<org.eventb.theory.core.scTheorem name="generatedBlod2" org.eventb.core.label="RemZerosToEquality" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x bn_Eq y⇔bn_remTrailingZeros(x)=bn_remTrailingZeros(y)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#=" org.eventb.theory.core.order="30"/>
<org.eventb.theory.core.scTheorem name="generatedBlod3" org.eventb.core.label="zeroIszero" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·bn_isZero(x)∧bn_isZero(y)⇒x bn_Eq y" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#9" org.eventb.theory.core.order="31"/>
<org.eventb.theory.core.scTheorem name="generatedBlod4" org.eventb.core.label="Commutivity" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL)·x bn_Eq y⇔y bn_Eq x" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#B" org.eventb.theory.core.order="32"/>
<org.eventb.theory.core.scTheorem name="generatedBlod5" org.eventb.core.label="Transitivity" org.eventb.core.predicate="∀x⦂List(BOOL),y⦂List(BOOL),z⦂List(BOOL)·x bn_Eq y∧y bn_Eq z⇒x bn_Eq z" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.theorem#3" org.eventb.theory.core.order="33"/>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N">
<org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="b" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="aB" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="as" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="BinaryEquality.bn_Eq_Equal_length case 0" org.eventb.core.accurate="true" org.eventb.core.label="BinaryEquality.bn_Eq_Equal_length case 0" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_Eq_Equal_length expansion" org.eventb.theory.core.formula="bn_Eq_Equal_length(nil ⦂ List(BOOL),b)">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_Eq_Equal_length rhs" org.eventb.core.label="bn_Eq_Equal_length rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BinaryEquality.bn_Eq_Equal_length case 1" org.eventb.core.accurate="true" org.eventb.core.label="BinaryEquality.bn_Eq_Equal_length case 1" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_Eq_Equal_length expansion" org.eventb.theory.core.formula="bn_Eq_Equal_length(cons(aB,as),b)">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_Eq_Equal_length rhs" org.eventb.core.label="bn_Eq_Equal_length rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.formula="aB=bn_LSB(b)∧(bn_isZero(as)∨bn_Eq_Equal_length(as,bn_shiftLeft1(b)))"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="BinaryEquality.bn_Eq" org.eventb.core.accurate="true" org.eventb.core.label="BinaryEquality.bn_Eq" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="bn_Eq expansion" org.eventb.theory.core.formula="a bn_Eq b">
<org.eventb.theory.core.scRewriteRuleRHS name="bn_Eq rhs" org.eventb.core.label="bn_Eq rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.formula="bn_countBits(a)=bn_countBits(b)∧bn_Eq_Equal_length(a,b)"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
<org.eventb.theory.core.scProofRulesBlock name="generatedBlod6" org.eventb.core.label="re−writes" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W">
<org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.metaVariable#'" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="xB" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.metaVariable#2" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.metaVariable#(" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scMetavariable name="yB" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.metaVariable#5" org.eventb.core.type="BOOL"/>
<org.eventb.theory.core.scMetavariable name="z" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.metaVariable#)" org.eventb.core.type="List(BOOL)"/>
<org.eventb.theory.core.scRewriteRule name="yC" org.eventb.core.accurate="true" org.eventb.core.label="bn_Eq_Equal_length(x, x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#*" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x = x" org.eventb.theory.core.formula="bn_Eq_Equal_length(x,x)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#*|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yD" org.eventb.core.accurate="true" org.eventb.core.label="x bn_Eq x" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#+" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x = x" org.eventb.theory.core.formula="x bn_Eq x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#+|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yE" org.eventb.core.accurate="true" org.eventb.core.label="Eq nil ⇒ isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#-" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Eq nil =&gt; isZero(x)" org.eventb.theory.core.formula="x bn_Eq (nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#-|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bn_isZero(x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yF" org.eventb.core.accurate="true" org.eventb.core.label="nil Eq ⇒ isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="nil Eq =&gt; isZero(x)" org.eventb.theory.core.formula="(nil ⦂ List(BOOL)) bn_Eq x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#.|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bn_isZero(x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yG" org.eventb.core.accurate="true" org.eventb.core.label="remZero(isZero(x)) = nil" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#\/" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="isZero(x) =&gt; remZeros(x) = nil" org.eventb.theory.core.formula="bn_remTrailingZeros(x)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#\/|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="nil ⦂ List(BOOL)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yH" org.eventb.core.accurate="true" org.eventb.core.label="countBits(remZero(x)) = countBits(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#0" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="countBits(remZero(x)) = countBits(x)" org.eventb.theory.core.formula="bn_countBits(bn_remTrailingZeros(x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#0|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bn_countBits(x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yI" org.eventb.core.accurate="true" org.eventb.core.label="zero = cons(FALSE, zero)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="zero = cons(FALSE, zero)" org.eventb.theory.core.formula="bn_isZero(cons(xB,y))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#1|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="xB=FALSE∧bn_isZero(y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yJ" org.eventb.core.accurate="true" org.eventb.core.label="LSB(zero) = FALSE" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="LSB(zero) = FALSE" org.eventb.theory.core.formula="bn_LSB(x)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#3|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="FALSE"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yK" org.eventb.core.accurate="true" org.eventb.core.label="Strip Cons" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#4" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Strip Cons" org.eventb.theory.core.formula="cons(xB,x) bn_Eq cons(yB,y)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#4|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="xB=yB∧x bn_Eq y"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yL" org.eventb.core.accurate="true" org.eventb.core.label="cons(TRUE, x) ≠ zero" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#7" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="isZero(cons(TRUE, x)) is False" org.eventb.theory.core.formula="bn_isZero(cons(TRUE,x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#7|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊥"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yM" org.eventb.core.accurate="true" org.eventb.core.label="cons(FALSE, notZero) ≠ zero" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#8" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="cons(FALSE, notZero) ≠ zero" org.eventb.theory.core.formula="bn_isZero(cons(FALSE,x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="¬bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#8|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊥"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yN" org.eventb.core.accurate="true" org.eventb.core.label="cons(FALSE, zero) = zero" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#9" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="cons(FALSE, zero) = zero" org.eventb.theory.core.formula="bn_isZero(cons(FALSE,x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#9|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yO" org.eventb.core.accurate="true" org.eventb.core.label="nil is zero" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#:" org.eventb.theory.core.applicability="automatic" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="nil is zero" org.eventb.theory.core.formula="bn_isZero(nil ⦂ List(BOOL))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#:|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yP" org.eventb.core.accurate="true" org.eventb.core.label="zero &lt;&lt; 1 = zero" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="zero &lt;&lt; 1 = zero" org.eventb.theory.core.formula="bn_isZero(bn_shiftLeft1(x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="bn_isZero(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#;|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yQ" org.eventb.core.accurate="true" org.eventb.core.label="x bn_Eq remZeros(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#=" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="x bn_Eq remZeros(x)" org.eventb.theory.core.formula="x bn_Eq bn_remTrailingZeros(x)">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#=|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yR" org.eventb.core.accurate="true" org.eventb.core.label="remZeros(x) bn_Eq x" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#&gt;" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="remZeros(x) bn_Eq x" org.eventb.theory.core.formula="bn_remTrailingZeros(x) bn_Eq x">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#&gt;|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yS" org.eventb.core.accurate="true" org.eventb.core.label="remZeros(remZeros(x)) = remZeros(x)" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#?" org.eventb.theory.core.applicability="both" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="remZeros(remZeros(x)) = remZeros(x)" org.eventb.theory.core.formula="bn_remTrailingZeros(bn_remTrailingZeros(x))">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#?|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bn_remTrailingZeros(x)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yT" org.eventb.core.accurate="true" org.eventb.core.label="remZerosToEquality" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="remZerosToEquality" org.eventb.theory.core.formula="x bn_Eq y">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#@|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="bn_remTrailingZeros(x)=bn_remTrailingZeros(y)"/>
</org.eventb.theory.core.scRewriteRule>
<org.eventb.theory.core.scRewriteRule name="yU" org.eventb.core.accurate="true" org.eventb.core.label="Commutivity" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#A" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.desc="Commutitive Sqap" org.eventb.theory.core.formula="x bn_Eq y">
<org.eventb.theory.core.scRewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.core.source="/BinaryNumbers/BinaryEquality.tuf|org.eventb.theory.core.theoryRoot#BinaryEquality|org.eventb.theory.core.proofRulesBlock#W|org.eventb.theory.core.rewriteRule#A|org.eventb.theory.core.rewriteRuleRHS#'" org.eventb.theory.core.formula="y bn_Eq x"/>
</org.eventb.theory.core.scRewriteRule>
</org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
